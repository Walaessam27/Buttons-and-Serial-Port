

Microchip Technology PIC18 LITE Macro Assembler V1.45 build -152302408 
                                                                                               Sat Jun 01 00:46:44 2024

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1
    13                           	psect	text3,global,reloc=2,class=CODE,delta=1
    14                           	psect	text4,global,reloc=2,class=CODE,delta=1
    15                           	psect	text5,global,reloc=2,class=CODE,delta=1
    16                           	psect	text6,global,reloc=2,class=CODE,delta=1
    17                           	psect	text7,global,reloc=2,class=CODE,delta=1
    18                           	psect	text8,global,reloc=2,class=CODE,delta=1
    19                           	psect	text9,global,reloc=2,class=CODE,delta=1
    20                           	psect	text10,global,reloc=2,class=CODE,delta=1
    21                           	psect	text11,global,reloc=2,class=CODE,delta=1
    22                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=1
    23                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=1
    24                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=1
    25                           	psect	text15,global,reloc=2,class=CODE,delta=1
    26                           	psect	text16,global,reloc=2,class=CODE,delta=1
    27                           	psect	text17,global,reloc=2,class=CODE,delta=1
    28                           	psect	text18,global,reloc=2,class=CODE,delta=1
    29                           	psect	text19,global,reloc=2,class=CODE,delta=1
    30                           	psect	text20,global,reloc=2,class=CODE,delta=1
    31                           	psect	text21,global,reloc=2,class=CODE,delta=1
    32                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    33                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    34  0000                     
    35                           ; Version 1.45
    36                           ; Generated 16/11/2017 GMT
    37                           ; 
    38                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    39                           ; All rights reserved.
    40                           ; 
    41                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    42                           ; 
    43                           ; Redistribution and use in source and binary forms, with or without modification, are
    44                           ; permitted provided that the following conditions are met:
    45                           ; 
    46                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    47                           ;        conditions and the following disclaimer.
    48                           ; 
    49                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    50                           ;        of conditions and the following disclaimer in the documentation and/or other
    51                           ;        materials provided with the distribution.
    52                           ; 
    53                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    54                           ;        software without specific prior written permission.
    55                           ; 
    56                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    57                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    58                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    59                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    60                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    61                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    62                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    63                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    64                           ; 
    65                           ; 
    66                           ; Code-generator required, PIC18F4620 Definitions
    67                           ; 
    68                           ; SFR Addresses
    69  0000                     
    70                           	psect	smallconst
    71  001000                     __psmallconst:
    72                           	opt stack 0
    73  001000  00                 	db	0
    74  001001                     _hexpowers:
    75                           	opt stack 0
    76  001001  0001               	dw	1
    77  001003  0010               	dw	16
    78  001005  0100               	dw	256
    79  001007  1000               	dw	4096
    80  001009                     __end_of_hexpowers:
    81                           	opt stack 0
    82  0000                     _TXREG	set	4013
    83  0000                     _PIR1bits	set	3998
    84  0000                     _RCREG	set	4014
    85  0000                     _RCSTAbits	set	4011
    86  0000                     _RCSTA	set	4011
    87  0000                     _TXSTAbits	set	4012
    88  0000                     _SPBRGH	set	4016
    89  0000                     _SPBRG	set	4015
    90  0000                     _TXSTA	set	4012
    91  0000                     _BAUDCONbits	set	4024
    92  0000                     _PORTBbits	set	3969
    93  0000                     _LATD	set	3980
    94  0000                     _PORTEbits	set	3972
    95  0000                     _PORTCbits	set	3970
    96  0000                     _INTCONbits	set	4082
    97  0000                     _TRISBbits	set	3987
    98  0000                     _PORTD	set	3971
    99  0000                     _TRISE	set	3990
   100  0000                     _TRISD	set	3989
   101  0000                     _TRISA	set	3986
   102  0000                     _PORTC	set	3970
   103  0000                     _TRISC	set	3988
   104  0000                     _TRISB	set	3987
   105  0000                     _ADCON1	set	4033
   106  0000                     _ADCON0	set	4034
   107  001009                     STR_3:
   108  001009  0A                 	db	10
   109  00100A  48                 	db	72	;'H'
   110  00100B  65                 	db	101	;'e'
   111  00100C  61                 	db	97	;'a'
   112  00100D  74                 	db	116	;'t'
   113  00100E  65                 	db	101	;'e'
   114  00100F  72                 	db	114	;'r'
   115  001010  3A                 	db	58	;':'
   116  001011  25                 	db	37
   117  001012  73                 	db	115	;'s'
   118  001013  2C                 	db	44
   119  001014  43                 	db	67	;'C'
   120  001015  6F                 	db	111	;'o'
   121  001016  6F                 	db	111	;'o'
   122  001017  6C                 	db	108	;'l'
   123  001018  65                 	db	101	;'e'
   124  001019  72                 	db	114	;'r'
   125  00101A  3A                 	db	58	;':'
   126  00101B  25                 	db	37
   127  00101C  73                 	db	115	;'s'
   128  00101D  2C                 	db	44
   129  00101E  52                 	db	82	;'R'
   130  00101F  65                 	db	101	;'e'
   131  001020  6C                 	db	108	;'l'
   132  001021  61                 	db	97	;'a'
   133  001022  79                 	db	121	;'y'
   134  001023  31                 	db	49	;'1'
   135  001024  3A                 	db	58	;':'
   136  001025  25                 	db	37
   137  001026  73                 	db	115	;'s'
   138  001027  2C                 	db	44
   139  001028  52                 	db	82	;'R'
   140  001029  65                 	db	101	;'e'
   141  00102A  6C                 	db	108	;'l'
   142  00102B  61                 	db	97	;'a'
   143  00102C  79                 	db	121	;'y'
   144  00102D  32                 	db	50	;'2'
   145  00102E  3A                 	db	58	;':'
   146  00102F  25                 	db	37
   147  001030  73                 	db	115	;'s'
   148  001031  0A                 	db	10
   149  001032  00                 	db	0
   150  001033                     STR_2:
   151  001033  57                 	db	87	;'W'
   152  001034  65                 	db	101	;'e'
   153  001035  6C                 	db	108	;'l'
   154  001036  63                 	db	99	;'c'
   155  001037  6F                 	db	111	;'o'
   156  001038  6D                 	db	109	;'m'
   157  001039  65                 	db	101	;'e'
   158  00103A  20                 	db	32
   159  00103B  53                 	db	83	;'S'
   160  00103C  61                 	db	97	;'a'
   161  00103D  6D                 	db	109	;'m'
   162  00103E  61                 	db	97	;'a'
   163  00103F  20                 	db	32
   164  001040  26                 	db	38
   165  001041  20                 	db	32
   166  001042  53                 	db	83	;'S'
   167  001043  61                 	db	97	;'a'
   168  001044  64                 	db	100	;'d'
   169  001045  65                 	db	101	;'e'
   170  001046  65                 	db	101	;'e'
   171  001047  6E                 	db	110	;'n'
   172  001048  0A                 	db	10
   173  001049  00                 	db	0
   174  00104A                     STR_14:
   175  00104A  30                 	db	48	;'0'
   176  00104B  31                 	db	49	;'1'
   177  00104C  32                 	db	50	;'2'
   178  00104D  33                 	db	51	;'3'
   179  00104E  34                 	db	52	;'4'
   180  00104F  35                 	db	53	;'5'
   181  001050  36                 	db	54	;'6'
   182  001051  37                 	db	55	;'7'
   183  001052  38                 	db	56	;'8'
   184  001053  39                 	db	57	;'9'
   185  001054  41                 	db	65	;'A'
   186  001055  42                 	db	66	;'B'
   187  001056  43                 	db	67	;'C'
   188  001057  44                 	db	68	;'D'
   189  001058  45                 	db	69	;'E'
   190  001059  46                 	db	70	;'F'
   191  00105A  00                 	db	0
   192  00105B                     STR_12:
   193  00105B  4C                 	db	76	;'L'
   194  00105C  45                 	db	69	;'E'
   195  00105D  44                 	db	68	;'D'
   196  00105E  73                 	db	115	;'s'
   197  00105F  3A                 	db	58	;':'
   198  001060  20                 	db	32
   199  001061  30                 	db	48	;'0'
   200  001062  78                 	db	120	;'x'
   201  001063  25                 	db	37
   202  001064  30                 	db	48	;'0'
   203  001065  32                 	db	50	;'2'
   204  001066  58                 	db	88	;'X'
   205  001067  0A                 	db	10
   206  001068  00                 	db	0
   207  001069                     STR_1:
   208  001069  4C                 	db	76	;'L'
   209  00106A  45                 	db	69	;'E'
   210  00106B  44                 	db	68	;'D'
   211  00106C  73                 	db	115	;'s'
   212  00106D  20                 	db	32
   213  00106E  42                 	db	66	;'B'
   214  00106F  69                 	db	105	;'i'
   215  001070  6E                 	db	110	;'n'
   216  001071  3A                 	db	58	;':'
   217  001072  20                 	db	32
   218  001073  25                 	db	37
   219  001074  73                 	db	115	;'s'
   220  001075  0A                 	db	10
   221  001076  00                 	db	0
   222  001077                     STR_13:
   223  001077  28                 	db	40
   224  001078  6E                 	db	110	;'n'
   225  001079  75                 	db	117	;'u'
   226  00107A  6C                 	db	108	;'l'
   227  00107B  6C                 	db	108	;'l'
   228  00107C  29                 	db	41
   229  00107D  00                 	db	0
   230  00107E                     STR_5:
   231  00107E  4F                 	db	79	;'O'
   232  00107F  46                 	db	70	;'F'
   233  001080  46                 	db	70	;'F'
   234  001081  00                 	db	0
   235  001082                     STR_4:
   236  001082  4F                 	db	79	;'O'
   237  001083  4E                 	db	78	;'N'
   238  001084  00                 	db	0
   239  0000                     
   240                           ; #config settings
   241  001085  00                 	db	0	; dummy byte at the end
   242  0000                     
   243                           	psect	cinit
   244  001866                     __pcinit:
   245                           	opt stack 0
   246  001866                     start_initialization:
   247                           	opt stack 0
   248  001866                     __initialization:
   249                           	opt stack 0
   250                           
   251                           ; Clear objects allocated to BANK0 (9 bytes)
   252  001866  EE00  F080         	lfsr	0,__pbssBANK0
   253  00186A  0E09               	movlw	9
   254  00186C                     clear_0:
   255  00186C  6AEE               	clrf	postinc0,c
   256  00186E  06E8               	decf	wreg,f,c
   257  001870  E1FD               	bnz	clear_0
   258                           
   259                           ; Clear objects allocated to COMRAM (8 bytes)
   260  001872  EE00  F077         	lfsr	0,__pbssCOMRAM
   261  001876  0E08               	movlw	8
   262  001878                     clear_1:
   263  001878  6AEE               	clrf	postinc0,c
   264  00187A  06E8               	decf	wreg,f,c
   265  00187C  E1FD               	bnz	clear_1
   266  00187E                     end_of_initialization:
   267                           	opt stack 0
   268  00187E                     __end_of__initialization:
   269                           	opt stack 0
   270  00187E  0100               	movlb	0
   271  001880  EFE6  F009         	goto	_main	;jump to C main() function
   272                           postinc0	equ	0xFEE
   273                           wreg	equ	0xFE8
   274                           
   275                           	psect	bssCOMRAM
   276  000077                     __pbssCOMRAM:
   277                           	opt stack 0
   278  000077                     _relay2:
   279                           	opt stack 0
   280  000077                     	ds	2
   281  000079                     _relay1:
   282                           	opt stack 0
   283  000079                     	ds	2
   284  00007B                     _coolerState:
   285                           	opt stack 0
   286  00007B                     	ds	2
   287  00007D                     _heaterState:
   288                           	opt stack 0
   289  00007D                     	ds	2
   290                           postinc0	equ	0xFEE
   291                           wreg	equ	0xFE8
   292                           
   293                           	psect	bssBANK0
   294  000080                     __pbssBANK0:
   295                           	opt stack 0
   296  000080                     _binaryString:
   297                           	opt stack 0
   298  000080                     	ds	9
   299                           postinc0	equ	0xFEE
   300                           wreg	equ	0xFE8
   301                           
   302                           	psect	cstackCOMRAM
   303  000001                     __pcstackCOMRAM:
   304                           	opt stack 0
   305  000001                     ??_isdigit:
   306  000001                     ??_turnEverythingOff:
   307  000001                     ??_updateRelayStatesFromHardware:
   308  000001                     ?___wmul:
   309                           	opt stack 0
   310  000001                     ?___lwdiv:
   311                           	opt stack 0
   312  000001                     setupSerial@dummy:
   313                           	opt stack 0
   314  000001                     read_byte_no_lib@c:
   315                           	opt stack 0
   316  000001                     send_byte_no_lib@c:
   317                           	opt stack 0
   318  000001                     delay_ms@n:
   319                           	opt stack 0
   320  000001                     intToBinaryString@value:
   321                           	opt stack 0
   322  000001                     ___wmul@multiplier:
   323                           	opt stack 0
   324  000001                     ___lwdiv@dividend:
   325                           	opt stack 0
   326                           
   327                           ; 2 bytes @ 0x0
   328  000001                     	ds	1
   329  000002                     _isdigit$955:
   330                           	opt stack 0
   331  000002                     send_string_no_lib@p:
   332                           	opt stack 0
   333                           
   334                           ; 2 bytes @ 0x1
   335  000002                     	ds	1
   336  000003                     isdigit@c:
   337                           	opt stack 0
   338  000003                     delay_ms@i:
   339                           	opt stack 0
   340  000003                     intToBinaryString@buffer:
   341                           	opt stack 0
   342  000003                     ___wmul@multiplicand:
   343                           	opt stack 0
   344  000003                     ___lwdiv@divisor:
   345                           	opt stack 0
   346                           
   347                           ; 2 bytes @ 0x2
   348  000003                     	ds	1
   349  000004                     
   350                           ; 1 bytes @ 0x3
   351  000004                     	ds	1
   352  000005                     intToBinaryString@bufferSize:
   353                           	opt stack 0
   354  000005                     ___wmul@product:
   355                           	opt stack 0
   356  000005                     ___lwdiv@quotient:
   357                           	opt stack 0
   358                           
   359                           ; 2 bytes @ 0x4
   360  000005                     	ds	2
   361  000007                     ??_intToBinaryString:
   362  000007                     ___lwdiv@counter:
   363                           	opt stack 0
   364                           
   365                           ; 1 bytes @ 0x6
   366  000007                     	ds	1
   367  000008                     ?_sprintf:
   368                           	opt stack 0
   369  000008                     sprintf@sp:
   370                           	opt stack 0
   371                           
   372                           ; 2 bytes @ 0x7
   373  000008                     	ds	2
   374  00000A                     sprintf@f:
   375                           	opt stack 0
   376                           
   377                           ; 2 bytes @ 0x9
   378  00000A                     	ds	1
   379  00000B                     _intToBinaryString$432:
   380                           	opt stack 0
   381                           
   382                           ; 2 bytes @ 0xA
   383  00000B                     	ds	2
   384  00000D                     intToBinaryString@i:
   385                           	opt stack 0
   386                           
   387                           ; 2 bytes @ 0xC
   388  00000D                     	ds	7
   389  000014                     ??_sprintf:
   390                           
   391                           ; 1 bytes @ 0x13
   392  000014                     	ds	4
   393  000018                     sprintf@idx:
   394                           	opt stack 0
   395                           
   396                           ; 1 bytes @ 0x17
   397  000018                     	ds	1
   398  000019                     sprintf@flag:
   399                           	opt stack 0
   400                           
   401                           ; 1 bytes @ 0x18
   402  000019                     	ds	1
   403  00001A                     sprintf@val:
   404                           	opt stack 0
   405                           
   406                           ; 2 bytes @ 0x19
   407  00001A                     	ds	2
   408  00001C                     sprintf@prec:
   409                           	opt stack 0
   410                           
   411                           ; 1 bytes @ 0x1B
   412  00001C                     	ds	1
   413  00001D                     sprintf@ap:
   414                           	opt stack 0
   415                           
   416                           ; 2 bytes @ 0x1C
   417  00001D                     	ds	2
   418  00001F                     sprintf@cp:
   419                           	opt stack 0
   420                           
   421                           ; 2 bytes @ 0x1E
   422  00001F                     	ds	2
   423  000021                     sprintf@len:
   424                           	opt stack 0
   425                           
   426                           ; 2 bytes @ 0x20
   427  000021                     	ds	2
   428  000023                     sprintf@width:
   429                           	opt stack 0
   430                           
   431                           ; 2 bytes @ 0x22
   432  000023                     	ds	2
   433  000025                     sprintf@c:
   434                           	opt stack 0
   435                           
   436                           ; 1 bytes @ 0x24
   437  000025                     	ds	1
   438  000026                     sendBinaryStatus@message:
   439                           	opt stack 0
   440                           
   441                           ; 40 bytes @ 0x25
   442  000026                     	ds	40
   443  00004E                     main@Buffer:
   444                           	opt stack 0
   445                           
   446                           ; 32 bytes @ 0x4D
   447  00004E                     	ds	32
   448  00006E                     _main$477:
   449                           	opt stack 0
   450                           
   451                           ; 2 bytes @ 0x6D
   452  00006E                     	ds	2
   453  000070                     _main$478:
   454                           	opt stack 0
   455                           
   456                           ; 2 bytes @ 0x6F
   457  000070                     	ds	2
   458  000072                     _main$479:
   459                           	opt stack 0
   460                           
   461                           ; 2 bytes @ 0x71
   462  000072                     	ds	2
   463  000074                     _main$480:
   464                           	opt stack 0
   465                           
   466                           ; 2 bytes @ 0x73
   467  000074                     	ds	2
   468  000076                     main@ch:
   469                           	opt stack 0
   470                           
   471                           ; 1 bytes @ 0x75
   472  000076                     	ds	1
   473                           postinc0	equ	0xFEE
   474                           wreg	equ	0xFE8
   475                           
   476 ;;
   477 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   478 ;;
   479 ;; *************** function _main *****************
   480 ;; Defined at:
   481 ;;		line 159 in file "serial_2024.c"
   482 ;; Parameters:    Size  Location     Type
   483 ;;		None
   484 ;; Auto vars:     Size  Location     Type
   485 ;;  ch              1  117[COMRAM] unsigned char 
   486 ;;  Buffer         32   77[COMRAM] unsigned char [32]
   487 ;;  x               1    0        unsigned char 
   488 ;; Return value:  Size  Location     Type
   489 ;;                  1    wreg      void 
   490 ;; Registers used:
   491 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   492 ;; Tracked objects:
   493 ;;		On entry : 0/0
   494 ;;		On exit  : 0/0
   495 ;;		Unchanged: 0/0
   496 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   497 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   498 ;;      Locals:        41       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   499 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   500 ;;      Totals:        41       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   501 ;;Total ram usage:       41 bytes
   502 ;; Hardware stack levels required when called:    3
   503 ;; This function calls:
   504 ;;		_delay_ms
   505 ;;		_initialize
   506 ;;		_is_byte_available
   507 ;;		_read_byte_no_lib
   508 ;;		_sendBinaryStatus
   509 ;;		_send_string_no_lib
   510 ;;		_setupSerial
   511 ;;		_sprintf
   512 ;;		_toggleLEDs0167
   513 ;;		_toggleLEDs2345
   514 ;;		_toggleRelay1
   515 ;;		_toggleRelay2
   516 ;;		_turnEverythingOff
   517 ;;		_turnOFFHeaterTurnOnCooler
   518 ;;		_turnONHeaterTurnOffCooler
   519 ;;		_updateRelayStatesFromHardware
   520 ;; This function is called by:
   521 ;;		Startup code after reset
   522 ;; This function uses a non-reentrant model
   523 ;;
   524                           
   525                           	psect	text0
   526  0013CC                     __ptext0:
   527                           	opt stack 0
   528  0013CC                     _main:
   529                           	opt stack 28
   530                           
   531                           ;serial_2024.c: 160: char Buffer[32];
   532                           ;serial_2024.c: 161: char x;
   533                           ;serial_2024.c: 162: initialize();
   534                           
   535                           ;incstack = 0
   536  0013CC  ECD1  F00B         	call	_initialize	;wreg free
   537                           
   538                           ;serial_2024.c: 163: setupSerial();
   539  0013D0  EC21  F00C         	call	_setupSerial	;wreg free
   540                           
   541                           ;serial_2024.c: 164: send_string_no_lib((unsigned char *) "Welcome Sama & Sadeen\n");
   542  0013D4  0E33               	movlw	low STR_2
   543  0013D6  6E02               	movwf	send_string_no_lib@p,c
   544  0013D8  0E10               	movlw	high STR_2
   545  0013DA  6E03               	movwf	send_string_no_lib@p+1,c
   546  0013DC  EC3A  F00B         	call	_send_string_no_lib	;wreg free
   547  0013E0                     l102:
   548  0013E0  0004               	clrwdt		;# 
   549                           
   550                           ;serial_2024.c: 169: if (!PORTBbits.RB0) {
   551  0013E2  B081               	btfsc	3969,0,c	;volatile
   552  0013E4  D008               	goto	l103
   553                           
   554                           ;serial_2024.c: 170: turnEverythingOff();
   555  0013E6  ECB0  F00B         	call	_turnEverythingOff	;wreg free
   556                           
   557                           ;serial_2024.c: 171: delay_ms(250);
   558  0013EA  0E00               	movlw	0
   559  0013EC  6E02               	movwf	delay_ms@n+1,c
   560  0013EE  0EFA               	movlw	250
   561  0013F0  6E01               	movwf	delay_ms@n,c
   562  0013F2  EC0E  F00C         	call	_delay_ms	;wreg free
   563  0013F6                     l103:
   564                           
   565                           ;serial_2024.c: 172: }
   566                           ;serial_2024.c: 173: if (!PORTBbits.RB1) {
   567  0013F6  B281               	btfsc	3969,1,c	;volatile
   568  0013F8  D008               	goto	l104
   569                           
   570                           ;serial_2024.c: 174: turnOFFHeaterTurnOnCooler();
   571  0013FA  EC86  F00C         	call	_turnOFFHeaterTurnOnCooler	;wreg free
   572                           
   573                           ;serial_2024.c: 175: delay_ms(250);
   574  0013FE  0E00               	movlw	0
   575  001400  6E02               	movwf	delay_ms@n+1,c
   576  001402  0EFA               	movlw	250
   577  001404  6E01               	movwf	delay_ms@n,c
   578  001406  EC0E  F00C         	call	_delay_ms	;wreg free
   579  00140A                     l104:
   580                           
   581                           ;serial_2024.c: 176: }
   582                           ;serial_2024.c: 177: if (!PORTBbits.RB2) {
   583  00140A  B481               	btfsc	3969,2,c	;volatile
   584  00140C  D008               	goto	l105
   585                           
   586                           ;serial_2024.c: 178: turnONHeaterTurnOffCooler();
   587  00140E  EC7B  F00C         	call	_turnONHeaterTurnOffCooler	;wreg free
   588                           
   589                           ;serial_2024.c: 179: delay_ms(250);
   590  001412  0E00               	movlw	0
   591  001414  6E02               	movwf	delay_ms@n+1,c
   592  001416  0EFA               	movlw	250
   593  001418  6E01               	movwf	delay_ms@n,c
   594  00141A  EC0E  F00C         	call	_delay_ms	;wreg free
   595  00141E                     l105:
   596                           
   597                           ;serial_2024.c: 180: }
   598                           ;serial_2024.c: 181: if (!PORTBbits.RB3) {
   599  00141E  B681               	btfsc	3969,3,c	;volatile
   600  001420  D008               	goto	l106
   601                           
   602                           ;serial_2024.c: 182: toggleLEDs0167();
   603  001422  ECA0  F00C         	call	_toggleLEDs0167	;wreg free
   604                           
   605                           ;serial_2024.c: 183: delay_ms(250);
   606  001426  0E00               	movlw	0
   607  001428  6E02               	movwf	delay_ms@n+1,c
   608  00142A  0EFA               	movlw	250
   609  00142C  6E01               	movwf	delay_ms@n,c
   610  00142E  EC0E  F00C         	call	_delay_ms	;wreg free
   611  001432                     l106:
   612                           
   613                           ;serial_2024.c: 184: }
   614                           ;serial_2024.c: 185: if (!PORTBbits.RB4) {
   615  001432  B881               	btfsc	3969,4,c	;volatile
   616  001434  D008               	goto	l107
   617                           
   618                           ;serial_2024.c: 186: toggleLEDs2345();
   619  001436  EC9D  F00C         	call	_toggleLEDs2345	;wreg free
   620                           
   621                           ;serial_2024.c: 187: delay_ms(250);
   622  00143A  0E00               	movlw	0
   623  00143C  6E02               	movwf	delay_ms@n+1,c
   624  00143E  0EFA               	movlw	250
   625  001440  6E01               	movwf	delay_ms@n,c
   626  001442  EC0E  F00C         	call	_delay_ms	;wreg free
   627  001446                     l107:
   628                           
   629                           ;serial_2024.c: 188: }
   630                           ;serial_2024.c: 189: if (!PORTBbits.RB5) {
   631  001446  BA81               	btfsc	3969,5,c	;volatile
   632  001448  D00A               	goto	l108
   633                           
   634                           ;serial_2024.c: 190: toggleRelay1();
   635  00144A  EC51  F00C         	call	_toggleRelay1	;wreg free
   636                           
   637                           ;serial_2024.c: 191: toggleRelay2();
   638  00144E  EC42  F00C         	call	_toggleRelay2	;wreg free
   639                           
   640                           ;serial_2024.c: 192: delay_ms(250);
   641  001452  0E00               	movlw	0
   642  001454  6E02               	movwf	delay_ms@n+1,c
   643  001456  0EFA               	movlw	250
   644  001458  6E01               	movwf	delay_ms@n,c
   645  00145A  EC0E  F00C         	call	_delay_ms	;wreg free
   646  00145E                     l108:
   647                           
   648                           ;serial_2024.c: 193: }
   649                           ;serial_2024.c: 195: if(is_byte_available()){
   650  00145E  EC6F  F00C         	call	_is_byte_available	;wreg free
   651  001462  0900               	iorlw	0
   652  001464  B4D8               	btfsc	status,2,c
   653  001466  D7BC               	goto	l102
   654                           
   655                           ;serial_2024.c: 196: char ch = read_byte_no_lib();
   656  001468  EC99  F00C         	call	_read_byte_no_lib	;wreg free
   657  00146C  6E76               	movwf	main@ch,c
   658                           
   659                           ;serial_2024.c: 197: if (ch == 'G') {
   660  00146E  0E47               	movlw	71
   661  001470  1876               	xorwf	main@ch,w,c
   662  001472  A4D8               	btfss	status,2,c
   663  001474  D053               	goto	l110
   664                           
   665                           ;serial_2024.c: 198: updateRelayStatesFromHardware();
   666  001476  ECE8  F00B         	call	_updateRelayStatesFromHardware	;wreg free
   667                           
   668                           ;serial_2024.c: 199: sprintf(Buffer,
   669                           ;serial_2024.c: 200: "\nHeater:%s,Cooler:%s,Relay1:%s,Relay2:%s\n",
   670                           ;serial_2024.c: 201: heaterState ? "ON" : "OFF",coolerState ? "ON" : "OFF",
   671                           ;serial_2024.c: 202: relay1 ? "ON" : "OFF", relay2 ? "ON" : "OFF");
   672  00147A  5077               	movf	_relay2,w,c
   673  00147C  1078               	iorwf	_relay2+1,w,c
   674  00147E  A4D8               	btfss	status,2,c
   675  001480  D004               	goto	l112
   676  001482  0E7E               	movlw	low STR_5
   677  001484  6E6E               	movwf	_main$477,c
   678  001486  0E10               	movlw	high STR_5
   679  001488  D003               	goto	L1
   680  00148A                     l112:
   681  00148A  0E82               	movlw	low STR_4
   682  00148C  6E6E               	movwf	_main$477,c
   683  00148E  0E10               	movlw	high STR_4
   684  001490                     L1:
   685  001490  6E6F               	movwf	_main$477+1,c
   686  001492  5079               	movf	_relay1,w,c
   687  001494  107A               	iorwf	_relay1+1,w,c
   688  001496  A4D8               	btfss	status,2,c
   689  001498  D004               	goto	l116
   690  00149A  0E7E               	movlw	low STR_5
   691  00149C  6E70               	movwf	_main$478,c
   692  00149E  0E10               	movlw	high STR_5
   693  0014A0  D003               	goto	L2
   694  0014A2                     l116:
   695  0014A2  0E82               	movlw	low STR_4
   696  0014A4  6E70               	movwf	_main$478,c
   697  0014A6  0E10               	movlw	high STR_4
   698  0014A8                     L2:
   699  0014A8  6E71               	movwf	_main$478+1,c
   700  0014AA  507B               	movf	_coolerState,w,c
   701  0014AC  107C               	iorwf	_coolerState+1,w,c
   702  0014AE  A4D8               	btfss	status,2,c
   703  0014B0  D004               	goto	l120
   704  0014B2  0E7E               	movlw	low STR_5
   705  0014B4  6E72               	movwf	_main$479,c
   706  0014B6  0E10               	movlw	high STR_5
   707  0014B8  D003               	goto	L3
   708  0014BA                     l120:
   709  0014BA  0E82               	movlw	low STR_4
   710  0014BC  6E72               	movwf	_main$479,c
   711  0014BE  0E10               	movlw	high STR_4
   712  0014C0                     L3:
   713  0014C0  6E73               	movwf	_main$479+1,c
   714  0014C2  507D               	movf	_heaterState,w,c
   715  0014C4  107E               	iorwf	_heaterState+1,w,c
   716  0014C6  A4D8               	btfss	status,2,c
   717  0014C8  D004               	goto	l124
   718  0014CA  0E7E               	movlw	low STR_5
   719  0014CC  6E74               	movwf	_main$480,c
   720  0014CE  0E10               	movlw	high STR_5
   721  0014D0  D003               	goto	L4
   722  0014D2                     l124:
   723  0014D2  0E82               	movlw	low STR_4
   724  0014D4  6E74               	movwf	_main$480,c
   725  0014D6  0E10               	movlw	high STR_4
   726  0014D8                     L4:
   727  0014D8  6E75               	movwf	_main$480+1,c
   728  0014DA  0E4E               	movlw	low main@Buffer
   729  0014DC  6E08               	movwf	sprintf@sp,c
   730  0014DE  0E00               	movlw	high main@Buffer
   731  0014E0  6E09               	movwf	sprintf@sp+1,c
   732  0014E2  0E09               	movlw	low STR_3
   733  0014E4  6E0A               	movwf	sprintf@f,c
   734  0014E6  0E10               	movlw	high STR_3
   735  0014E8  6E0B               	movwf	sprintf@f+1,c
   736  0014EA  C074  F00C         	movff	_main$480,?_sprintf+4
   737  0014EE  C075  F00D         	movff	_main$480+1,?_sprintf+5
   738  0014F2  C072  F00E         	movff	_main$479,?_sprintf+6
   739  0014F6  C073  F00F         	movff	_main$479+1,?_sprintf+7
   740  0014FA  C070  F010         	movff	_main$478,?_sprintf+8
   741  0014FE  C071  F011         	movff	_main$478+1,?_sprintf+9
   742  001502  C06E  F012         	movff	_main$477,?_sprintf+10
   743  001506  C06F  F013         	movff	_main$477+1,?_sprintf+11
   744  00150A  EC43  F008         	call	_sprintf	;wreg free
   745                           
   746                           ;serial_2024.c: 203: send_string_no_lib(Buffer);
   747  00150E  0E4E               	movlw	low main@Buffer
   748  001510  6E02               	movwf	send_string_no_lib@p,c
   749  001512  0E00               	movlw	high main@Buffer
   750  001514  6E03               	movwf	send_string_no_lib@p+1,c
   751  001516  EC3A  F00B         	call	_send_string_no_lib	;wreg free
   752  00151A  D043               	goto	u1396
   753  00151C                     l110:
   754                           
   755                           ;serial_2024.c: 207: else if (ch == 'g') {
   756  00151C  0E67               	movlw	103
   757  00151E  1876               	xorwf	main@ch,w,c
   758  001520  A4D8               	btfss	status,2,c
   759  001522  D016               	goto	l128
   760                           
   761                           ;serial_2024.c: 208: sprintf(Buffer, "LEDs: 0x%02X\n", PORTD);
   762  001524  0E4E               	movlw	low main@Buffer
   763  001526  6E08               	movwf	sprintf@sp,c
   764  001528  0E00               	movlw	high main@Buffer
   765  00152A  6E09               	movwf	sprintf@sp+1,c
   766  00152C  0E5B               	movlw	low STR_12
   767  00152E  6E0A               	movwf	sprintf@f,c
   768  001530  0E10               	movlw	high STR_12
   769  001532  6E0B               	movwf	sprintf@f+1,c
   770  001534  CF83 F00C          	movff	3971,?_sprintf+4	;volatile
   771  001538  6A0D               	clrf	?_sprintf+5,c
   772  00153A  EC43  F008         	call	_sprintf	;wreg free
   773                           
   774                           ;serial_2024.c: 209: send_string_no_lib(Buffer);
   775  00153E  0E4E               	movlw	low main@Buffer
   776  001540  6E02               	movwf	send_string_no_lib@p,c
   777  001542  0E00               	movlw	high main@Buffer
   778  001544  6E03               	movwf	send_string_no_lib@p+1,c
   779  001546  EC3A  F00B         	call	_send_string_no_lib	;wreg free
   780                           
   781                           ;serial_2024.c: 210: sendBinaryStatus();
   782  00154A  EC8E  F00B         	call	_sendBinaryStatus	;wreg free
   783  00154E  D029               	goto	u1396
   784  001550                     l128:
   785                           
   786                           ;serial_2024.c: 213: else if (ch == 'H') {
   787  001550  0E48               	movlw	72
   788  001552  1876               	xorwf	main@ch,w,c
   789  001554  A4D8               	btfss	status,2,c
   790  001556  D003               	goto	l130
   791                           
   792                           ;serial_2024.c: 214: turnONHeaterTurnOffCooler();
   793  001558  EC7B  F00C         	call	_turnONHeaterTurnOffCooler	;wreg free
   794  00155C  D022               	goto	u1396
   795  00155E                     l130:
   796                           
   797                           ;serial_2024.c: 217: else if (ch == 'h') {
   798  00155E  0E68               	movlw	104
   799  001560  1876               	xorwf	main@ch,w,c
   800  001562  A4D8               	btfss	status,2,c
   801  001564  D003               	goto	l132
   802                           
   803                           ;serial_2024.c: 218: turnOFFHeaterTurnOnCooler();
   804  001566  EC86  F00C         	call	_turnOFFHeaterTurnOnCooler	;wreg free
   805  00156A  D01B               	goto	u1396
   806  00156C                     l132:
   807                           
   808                           ;serial_2024.c: 223: else if (ch == 'D') {
   809  00156C  0E44               	movlw	68
   810  00156E  1876               	xorwf	main@ch,w,c
   811  001570  A4D8               	btfss	status,2,c
   812  001572  D003               	goto	l134
   813                           
   814                           ;serial_2024.c: 224: toggleLEDs2345();
   815  001574  EC9D  F00C         	call	_toggleLEDs2345	;wreg free
   816  001578  D014               	goto	u1396
   817  00157A                     l134:
   818                           
   819                           ;serial_2024.c: 227: else if (ch == 'd') {
   820  00157A  0E64               	movlw	100
   821  00157C  1876               	xorwf	main@ch,w,c
   822  00157E  A4D8               	btfss	status,2,c
   823  001580  D003               	goto	l136
   824                           
   825                           ;serial_2024.c: 228: toggleLEDs0167();
   826  001582  ECA0  F00C         	call	_toggleLEDs0167	;wreg free
   827  001586  D00D               	goto	u1396
   828  001588                     l136:
   829                           
   830                           ;serial_2024.c: 231: else if (ch == 'c') {
   831  001588  0E63               	movlw	99
   832  00158A  1876               	xorwf	main@ch,w,c
   833  00158C  A4D8               	btfss	status,2,c
   834  00158E  D00C               	goto	l138
   835                           
   836                           ;serial_2024.c: 232: relay1=0;
   837  001590  0E00               	movlw	0
   838  001592  6E7A               	movwf	_relay1+1,c
   839  001594  0E00               	movlw	0
   840  001596  6E79               	movwf	_relay1,c
   841                           
   842                           ;serial_2024.c: 233: PORTCbits.RC0 = relay1;
   843  001598  B079               	btfsc	_relay1,0,c
   844  00159A  D002               	bra	u1395
   845  00159C  9082               	bcf	3970,0,c	;volatile
   846  00159E  D001               	bra	u1396
   847  0015A0                     u1395:
   848  0015A0  D00F               	goto	u1415
   849  0015A2                     u1396:
   850                           
   851                           ;serial_2024.c: 234: ch='\0';
   852  0015A2  0E00               	movlw	0
   853  0015A4  6E76               	movwf	main@ch,c
   854                           
   855                           ;serial_2024.c: 235: }
   856  0015A6  D71C               	goto	l102
   857  0015A8                     l138:
   858                           
   859                           ;serial_2024.c: 236: else if (ch == 'C') {
   860  0015A8  0E43               	movlw	67
   861  0015AA  1876               	xorwf	main@ch,w,c
   862  0015AC  A4D8               	btfss	status,2,c
   863  0015AE  D00A               	goto	l140
   864                           
   865                           ;serial_2024.c: 237: relay1=1;
   866  0015B0  0E00               	movlw	0
   867  0015B2  6E7A               	movwf	_relay1+1,c
   868  0015B4  0E01               	movlw	1
   869  0015B6  6E79               	movwf	_relay1,c
   870                           
   871                           ;serial_2024.c: 238: PORTCbits.RC0 = relay1;
   872  0015B8  B079               	btfsc	_relay1,0,c
   873  0015BA  D002               	bra	u1415
   874  0015BC  9082               	bcf	3970,0,c	;volatile
   875  0015BE  D001               	bra	u1416
   876  0015C0                     u1415:
   877  0015C0  8082               	bsf	3970,0,c	;volatile
   878  0015C2                     u1416:
   879  0015C2  D7EF               	goto	u1396
   880  0015C4                     l140:
   881                           
   882                           ;serial_2024.c: 242: else if (ch == 'r') {
   883  0015C4  0E72               	movlw	114
   884  0015C6  1876               	xorwf	main@ch,w,c
   885  0015C8  A4D8               	btfss	status,2,c
   886  0015CA  D00A               	goto	l142
   887                           
   888                           ;serial_2024.c: 244: relay2=0;
   889  0015CC  0E00               	movlw	0
   890  0015CE  6E78               	movwf	_relay2+1,c
   891  0015D0  0E00               	movlw	0
   892  0015D2  6E77               	movwf	_relay2,c
   893                           
   894                           ;serial_2024.c: 245: PORTEbits.RE0 = relay2;
   895  0015D4  B077               	btfsc	_relay2,0,c
   896  0015D6  D002               	bra	u1435
   897  0015D8  9084               	bcf	3972,0,c	;volatile
   898  0015DA  D001               	bra	u1436
   899  0015DC                     u1435:
   900  0015DC  D00D               	goto	u1455
   901  0015DE                     u1436:
   902  0015DE  D7E1               	goto	u1396
   903  0015E0                     l142:
   904                           
   905                           ;serial_2024.c: 248: else if (ch == 'R') {
   906  0015E0  0E52               	movlw	82
   907  0015E2  1876               	xorwf	main@ch,w,c
   908  0015E4  A4D8               	btfss	status,2,c
   909  0015E6  D00A               	goto	l144
   910                           
   911                           ;serial_2024.c: 249: relay2=1;
   912  0015E8  0E00               	movlw	0
   913  0015EA  6E78               	movwf	_relay2+1,c
   914  0015EC  0E01               	movlw	1
   915  0015EE  6E77               	movwf	_relay2,c
   916                           
   917                           ;serial_2024.c: 250: PORTEbits.RE0 =relay2;
   918  0015F0  B077               	btfsc	_relay2,0,c
   919  0015F2  D002               	bra	u1455
   920  0015F4  9084               	bcf	3972,0,c	;volatile
   921  0015F6  D001               	bra	u1456
   922  0015F8                     u1455:
   923  0015F8  8084               	bsf	3972,0,c	;volatile
   924  0015FA                     u1456:
   925  0015FA  D7D3               	goto	u1396
   926  0015FC                     l144:
   927                           
   928                           ;serial_2024.c: 254: else if (ch == 'z') {
   929  0015FC  0E7A               	movlw	122
   930  0015FE  1876               	xorwf	main@ch,w,c
   931  001600  A4D8               	btfss	status,2,c
   932  001602  D6EE               	goto	l102
   933                           
   934                           ;serial_2024.c: 255: turnEverythingOff();
   935  001604  ECB0  F00B         	call	_turnEverythingOff	;wreg free
   936  001608  D7CC               	goto	u1396
   937  00160A                     __end_of_main:
   938                           	opt stack 0
   939                           postinc0	equ	0xFEE
   940                           wreg	equ	0xFE8
   941                           status	equ	0xFD8
   942                           
   943 ;; *************** function _updateRelayStatesFromHardware *****************
   944 ;; Defined at:
   945 ;;		line 134 in file "serial_2024.c"
   946 ;; Parameters:    Size  Location     Type
   947 ;;		None
   948 ;; Auto vars:     Size  Location     Type
   949 ;;		None
   950 ;; Return value:  Size  Location     Type
   951 ;;                  1    wreg      void 
   952 ;; Registers used:
   953 ;;		wreg, status,2
   954 ;; Tracked objects:
   955 ;;		On entry : 0/0
   956 ;;		On exit  : 0/0
   957 ;;		Unchanged: 0/0
   958 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   959 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   960 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   961 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   962 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   963 ;;Total ram usage:        1 bytes
   964 ;; Hardware stack levels used:    1
   965 ;; This function calls:
   966 ;;		Nothing
   967 ;; This function is called by:
   968 ;;		_main
   969 ;; This function uses a non-reentrant model
   970 ;;
   971                           
   972                           	psect	text1
   973  0017D0                     __ptext1:
   974                           	opt stack 0
   975  0017D0                     _updateRelayStatesFromHardware:
   976                           	opt stack 30
   977                           
   978                           ;serial_2024.c: 135: relay1 = PORTCbits.RC0;
   979                           
   980                           ;incstack = 0
   981  0017D0  A082               	btfss	3970,0,c	;volatile
   982  0017D2  D003               	goto	u1150
   983  0017D4  6A01               	clrf	??_updateRelayStatesFromHardware& (0+255),c
   984  0017D6  2A01               	incf	??_updateRelayStatesFromHardware& (0+255),f,c
   985  0017D8  D001               	goto	u1158
   986  0017DA                     u1150:
   987  0017DA  6A01               	clrf	??_updateRelayStatesFromHardware& (0+255),c
   988  0017DC                     u1158:
   989  0017DC  5001               	movf	??_updateRelayStatesFromHardware,w,c
   990  0017DE  6E79               	movwf	_relay1,c
   991  0017E0  6A7A               	clrf	_relay1+1,c
   992                           
   993                           ;serial_2024.c: 136: relay2 = PORTEbits.RE0;
   994  0017E2  A084               	btfss	3972,0,c	;volatile
   995  0017E4  D003               	goto	u1160
   996  0017E6  6A01               	clrf	??_updateRelayStatesFromHardware& (0+255),c
   997  0017E8  2A01               	incf	??_updateRelayStatesFromHardware& (0+255),f,c
   998  0017EA  D001               	goto	u1168
   999  0017EC                     u1160:
  1000  0017EC  6A01               	clrf	??_updateRelayStatesFromHardware& (0+255),c
  1001  0017EE                     u1168:
  1002  0017EE  5001               	movf	??_updateRelayStatesFromHardware,w,c
  1003  0017F0  6E77               	movwf	_relay2,c
  1004  0017F2  6A78               	clrf	_relay2+1,c
  1005  0017F4  0012               	return		;funcret
  1006  0017F6                     __end_of_updateRelayStatesFromHardware:
  1007                           	opt stack 0
  1008                           postinc0	equ	0xFEE
  1009                           wreg	equ	0xFE8
  1010                           status	equ	0xFD8
  1011                           
  1012 ;; *************** function _turnONHeaterTurnOffCooler *****************
  1013 ;; Defined at:
  1014 ;;		line 117 in file "serial_2024.c"
  1015 ;; Parameters:    Size  Location     Type
  1016 ;;		None
  1017 ;; Auto vars:     Size  Location     Type
  1018 ;;		None
  1019 ;; Return value:  Size  Location     Type
  1020 ;;                  1    wreg      void 
  1021 ;; Registers used:
  1022 ;;		wreg, status,2
  1023 ;; Tracked objects:
  1024 ;;		On entry : 0/0
  1025 ;;		On exit  : 0/0
  1026 ;;		Unchanged: 0/0
  1027 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1028 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1029 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1030 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1031 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1032 ;;Total ram usage:        0 bytes
  1033 ;; Hardware stack levels used:    1
  1034 ;; This function calls:
  1035 ;;		Nothing
  1036 ;; This function is called by:
  1037 ;;		_main
  1038 ;; This function uses a non-reentrant model
  1039 ;;
  1040                           
  1041                           	psect	text2
  1042  0018F6                     __ptext2:
  1043                           	opt stack 0
  1044  0018F6                     _turnONHeaterTurnOffCooler:
  1045                           	opt stack 30
  1046                           
  1047                           ;serial_2024.c: 119: PORTCbits.RC5 =1;
  1048                           
  1049                           ;incstack = 0
  1050  0018F6  8A82               	bsf	3970,5,c	;volatile
  1051                           
  1052                           ;serial_2024.c: 120: PORTCbits.RC2 =0;
  1053  0018F8  9482               	bcf	3970,2,c	;volatile
  1054                           
  1055                           ;serial_2024.c: 121: coolerState =0;
  1056  0018FA  0E00               	movlw	0
  1057  0018FC  6E7C               	movwf	_coolerState+1,c
  1058  0018FE  0E00               	movlw	0
  1059  001900  6E7B               	movwf	_coolerState,c
  1060                           
  1061                           ;serial_2024.c: 122: heaterState =1;
  1062  001902  0E00               	movlw	0
  1063  001904  6E7E               	movwf	_heaterState+1,c
  1064  001906  0E01               	movlw	1
  1065  001908  6E7D               	movwf	_heaterState,c
  1066  00190A  0012               	return		;funcret
  1067  00190C                     __end_of_turnONHeaterTurnOffCooler:
  1068                           	opt stack 0
  1069                           postinc0	equ	0xFEE
  1070                           wreg	equ	0xFE8
  1071                           status	equ	0xFD8
  1072                           
  1073 ;; *************** function _turnOFFHeaterTurnOnCooler *****************
  1074 ;; Defined at:
  1075 ;;		line 110 in file "serial_2024.c"
  1076 ;; Parameters:    Size  Location     Type
  1077 ;;		None
  1078 ;; Auto vars:     Size  Location     Type
  1079 ;;		None
  1080 ;; Return value:  Size  Location     Type
  1081 ;;                  1    wreg      void 
  1082 ;; Registers used:
  1083 ;;		wreg, status,2
  1084 ;; Tracked objects:
  1085 ;;		On entry : 0/0
  1086 ;;		On exit  : 0/0
  1087 ;;		Unchanged: 0/0
  1088 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1089 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1090 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1091 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1092 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1093 ;;Total ram usage:        0 bytes
  1094 ;; Hardware stack levels used:    1
  1095 ;; This function calls:
  1096 ;;		Nothing
  1097 ;; This function is called by:
  1098 ;;		_main
  1099 ;; This function uses a non-reentrant model
  1100 ;;
  1101                           
  1102                           	psect	text3
  1103  00190C                     __ptext3:
  1104                           	opt stack 0
  1105  00190C                     _turnOFFHeaterTurnOnCooler:
  1106                           	opt stack 30
  1107                           
  1108                           ;serial_2024.c: 112: PORTCbits.RC5 =0;
  1109                           
  1110                           ;incstack = 0
  1111  00190C  9A82               	bcf	3970,5,c	;volatile
  1112                           
  1113                           ;serial_2024.c: 113: PORTCbits.RC2 =1;
  1114  00190E  8482               	bsf	3970,2,c	;volatile
  1115                           
  1116                           ;serial_2024.c: 114: coolerState = 1;
  1117  001910  0E00               	movlw	0
  1118  001912  6E7C               	movwf	_coolerState+1,c
  1119  001914  0E01               	movlw	1
  1120  001916  6E7B               	movwf	_coolerState,c
  1121                           
  1122                           ;serial_2024.c: 115: heaterState = 0;
  1123  001918  0E00               	movlw	0
  1124  00191A  6E7E               	movwf	_heaterState+1,c
  1125  00191C  0E00               	movlw	0
  1126  00191E  6E7D               	movwf	_heaterState,c
  1127  001920  0012               	return		;funcret
  1128  001922                     __end_of_turnOFFHeaterTurnOnCooler:
  1129                           	opt stack 0
  1130                           postinc0	equ	0xFEE
  1131                           wreg	equ	0xFE8
  1132                           status	equ	0xFD8
  1133                           
  1134 ;; *************** function _turnEverythingOff *****************
  1135 ;; Defined at:
  1136 ;;		line 92 in file "serial_2024.c"
  1137 ;; Parameters:    Size  Location     Type
  1138 ;;		None
  1139 ;; Auto vars:     Size  Location     Type
  1140 ;;		None
  1141 ;; Return value:  Size  Location     Type
  1142 ;;                  1    wreg      void 
  1143 ;; Registers used:
  1144 ;;		wreg, status,2
  1145 ;; Tracked objects:
  1146 ;;		On entry : 0/0
  1147 ;;		On exit  : 0/0
  1148 ;;		Unchanged: 0/0
  1149 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1150 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1151 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1152 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1153 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1154 ;;Total ram usage:        1 bytes
  1155 ;; Hardware stack levels used:    1
  1156 ;; This function calls:
  1157 ;;		Nothing
  1158 ;; This function is called by:
  1159 ;;		_main
  1160 ;; This function uses a non-reentrant model
  1161 ;;
  1162                           
  1163                           	psect	text4
  1164  001760                     __ptext4:
  1165                           	opt stack 0
  1166  001760                     _turnEverythingOff:
  1167                           	opt stack 30
  1168                           
  1169                           ;serial_2024.c: 93: PORTCbits.RC5 = 0;
  1170                           
  1171                           ;incstack = 0
  1172  001760  9A82               	bcf	3970,5,c	;volatile
  1173                           
  1174                           ;serial_2024.c: 94: PORTCbits.RC2 = 0;
  1175  001762  9482               	bcf	3970,2,c	;volatile
  1176                           
  1177                           ;serial_2024.c: 95: PORTCbits.RC0 = 0;
  1178  001764  9082               	bcf	3970,0,c	;volatile
  1179                           
  1180                           ;serial_2024.c: 96: PORTEbits.RE0 = 0;
  1181  001766  9084               	bcf	3972,0,c	;volatile
  1182                           
  1183                           ;serial_2024.c: 97: relay1=0;
  1184  001768  0E00               	movlw	0
  1185  00176A  6E7A               	movwf	_relay1+1,c
  1186  00176C  0E00               	movlw	0
  1187  00176E  6E79               	movwf	_relay1,c
  1188                           
  1189                           ;serial_2024.c: 98: relay2=0;
  1190  001770  0E00               	movlw	0
  1191  001772  6E78               	movwf	_relay2+1,c
  1192  001774  0E00               	movlw	0
  1193  001776  6E77               	movwf	_relay2,c
  1194                           
  1195                           ;serial_2024.c: 99: coolerState = PORTCbits.RC2;
  1196  001778  A482               	btfss	3970,2,c	;volatile
  1197  00177A  D003               	goto	u1070
  1198  00177C  6A01               	clrf	??_turnEverythingOff& (0+255),c
  1199  00177E  2A01               	incf	??_turnEverythingOff& (0+255),f,c
  1200  001780  D001               	goto	u1078
  1201  001782                     u1070:
  1202  001782  6A01               	clrf	??_turnEverythingOff& (0+255),c
  1203  001784                     u1078:
  1204  001784  5001               	movf	??_turnEverythingOff,w,c
  1205  001786  6E7B               	movwf	_coolerState,c
  1206  001788  6A7C               	clrf	_coolerState+1,c
  1207                           
  1208                           ;serial_2024.c: 100: heaterState =PORTCbits.RC5;
  1209  00178A  AA82               	btfss	3970,5,c	;volatile
  1210  00178C  D003               	goto	u1080
  1211  00178E  6A01               	clrf	??_turnEverythingOff& (0+255),c
  1212  001790  2A01               	incf	??_turnEverythingOff& (0+255),f,c
  1213  001792  D001               	goto	u1088
  1214  001794                     u1080:
  1215  001794  6A01               	clrf	??_turnEverythingOff& (0+255),c
  1216  001796                     u1088:
  1217  001796  5001               	movf	??_turnEverythingOff,w,c
  1218  001798  6E7D               	movwf	_heaterState,c
  1219  00179A  6A7E               	clrf	_heaterState+1,c
  1220                           
  1221                           ;serial_2024.c: 101: LATD = 0x0000 ;
  1222  00179C  0E00               	movlw	0
  1223  00179E  6E8C               	movwf	3980,c	;volatile
  1224  0017A0  0012               	return		;funcret
  1225  0017A2                     __end_of_turnEverythingOff:
  1226                           	opt stack 0
  1227                           postinc0	equ	0xFEE
  1228                           wreg	equ	0xFE8
  1229                           status	equ	0xFD8
  1230                           
  1231 ;; *************** function _toggleRelay2 *****************
  1232 ;; Defined at:
  1233 ;;		line 129 in file "serial_2024.c"
  1234 ;; Parameters:    Size  Location     Type
  1235 ;;		None
  1236 ;; Auto vars:     Size  Location     Type
  1237 ;;		None
  1238 ;; Return value:  Size  Location     Type
  1239 ;;                  1    wreg      void 
  1240 ;; Registers used:
  1241 ;;		wreg, status,2, status,0
  1242 ;; Tracked objects:
  1243 ;;		On entry : 0/0
  1244 ;;		On exit  : 0/0
  1245 ;;		Unchanged: 0/0
  1246 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1247 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1248 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1249 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1250 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1251 ;;Total ram usage:        0 bytes
  1252 ;; Hardware stack levels used:    1
  1253 ;; This function calls:
  1254 ;;		Nothing
  1255 ;; This function is called by:
  1256 ;;		_main
  1257 ;; This function uses a non-reentrant model
  1258 ;;
  1259                           
  1260                           	psect	text5
  1261  001884                     __ptext5:
  1262                           	opt stack 0
  1263  001884                     _toggleRelay2:
  1264                           	opt stack 30
  1265                           
  1266                           ;serial_2024.c: 130: relay2=!relay2 ;
  1267                           
  1268                           ;incstack = 0
  1269  001884  5077               	movf	_relay2,w,c
  1270  001886  1078               	iorwf	_relay2+1,w,c
  1271  001888  A4D8               	btfss	status,2,c
  1272  00188A  D002               	goto	u1120
  1273  00188C  0E01               	movlw	1
  1274  00188E  D001               	goto	u1130
  1275  001890                     u1120:
  1276  001890  0E00               	movlw	0
  1277  001892                     u1130:
  1278  001892  6E77               	movwf	_relay2,c
  1279  001894  6A78               	clrf	_relay2+1,c
  1280                           
  1281                           ;serial_2024.c: 131: PORTEbits.RE0 = relay2;
  1282  001896  B077               	btfsc	_relay2,0,c
  1283  001898  D002               	bra	u1145
  1284  00189A  9084               	bcf	3972,0,c	;volatile
  1285  00189C  D001               	bra	u1146
  1286  00189E                     u1145:
  1287  00189E  8084               	bsf	3972,0,c	;volatile
  1288  0018A0                     u1146:
  1289  0018A0  0012               	return		;funcret
  1290  0018A2                     __end_of_toggleRelay2:
  1291                           	opt stack 0
  1292                           postinc0	equ	0xFEE
  1293                           wreg	equ	0xFE8
  1294                           status	equ	0xFD8
  1295                           
  1296 ;; *************** function _toggleRelay1 *****************
  1297 ;; Defined at:
  1298 ;;		line 124 in file "serial_2024.c"
  1299 ;; Parameters:    Size  Location     Type
  1300 ;;		None
  1301 ;; Auto vars:     Size  Location     Type
  1302 ;;		None
  1303 ;; Return value:  Size  Location     Type
  1304 ;;                  1    wreg      void 
  1305 ;; Registers used:
  1306 ;;		wreg, status,2, status,0
  1307 ;; Tracked objects:
  1308 ;;		On entry : 0/0
  1309 ;;		On exit  : 0/0
  1310 ;;		Unchanged: 0/0
  1311 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1312 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1313 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1314 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1315 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1316 ;;Total ram usage:        0 bytes
  1317 ;; Hardware stack levels used:    1
  1318 ;; This function calls:
  1319 ;;		Nothing
  1320 ;; This function is called by:
  1321 ;;		_main
  1322 ;; This function uses a non-reentrant model
  1323 ;;
  1324                           
  1325                           	psect	text6
  1326  0018A2                     __ptext6:
  1327                           	opt stack 0
  1328  0018A2                     _toggleRelay1:
  1329                           	opt stack 30
  1330                           
  1331                           ;serial_2024.c: 125: relay1=!relay1;
  1332                           
  1333                           ;incstack = 0
  1334  0018A2  5079               	movf	_relay1,w,c
  1335  0018A4  107A               	iorwf	_relay1+1,w,c
  1336  0018A6  A4D8               	btfss	status,2,c
  1337  0018A8  D002               	goto	u1090
  1338  0018AA  0E01               	movlw	1
  1339  0018AC  D001               	goto	u1100
  1340  0018AE                     u1090:
  1341  0018AE  0E00               	movlw	0
  1342  0018B0                     u1100:
  1343  0018B0  6E79               	movwf	_relay1,c
  1344  0018B2  6A7A               	clrf	_relay1+1,c
  1345                           
  1346                           ;serial_2024.c: 126: PORTCbits.RC0 = relay1;
  1347  0018B4  B079               	btfsc	_relay1,0,c
  1348  0018B6  D002               	bra	u1115
  1349  0018B8  9082               	bcf	3970,0,c	;volatile
  1350  0018BA  D001               	bra	u1116
  1351  0018BC                     u1115:
  1352  0018BC  8082               	bsf	3970,0,c	;volatile
  1353  0018BE                     u1116:
  1354  0018BE  0012               	return		;funcret
  1355  0018C0                     __end_of_toggleRelay1:
  1356                           	opt stack 0
  1357                           postinc0	equ	0xFEE
  1358                           wreg	equ	0xFE8
  1359                           status	equ	0xFD8
  1360                           
  1361 ;; *************** function _toggleLEDs2345 *****************
  1362 ;; Defined at:
  1363 ;;		line 103 in file "serial_2024.c"
  1364 ;; Parameters:    Size  Location     Type
  1365 ;;		None
  1366 ;; Auto vars:     Size  Location     Type
  1367 ;;		None
  1368 ;; Return value:  Size  Location     Type
  1369 ;;                  1    wreg      void 
  1370 ;; Registers used:
  1371 ;;		wreg, status,2, status,0
  1372 ;; Tracked objects:
  1373 ;;		On entry : 0/0
  1374 ;;		On exit  : 0/0
  1375 ;;		Unchanged: 0/0
  1376 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1377 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1378 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1379 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1380 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1381 ;;Total ram usage:        0 bytes
  1382 ;; Hardware stack levels used:    1
  1383 ;; This function calls:
  1384 ;;		Nothing
  1385 ;; This function is called by:
  1386 ;;		_main
  1387 ;; This function uses a non-reentrant model
  1388 ;;
  1389                           
  1390                           	psect	text7
  1391  00193A                     __ptext7:
  1392                           	opt stack 0
  1393  00193A                     _toggleLEDs2345:
  1394                           	opt stack 30
  1395                           
  1396                           ;serial_2024.c: 104: LATD ^= 0x3C;
  1397                           
  1398                           ;incstack = 0
  1399  00193A  0E3C               	movlw	60
  1400  00193C  1A8C               	xorwf	3980,f,c	;volatile
  1401  00193E  0012               	return		;funcret
  1402  001940                     __end_of_toggleLEDs2345:
  1403                           	opt stack 0
  1404                           postinc0	equ	0xFEE
  1405                           wreg	equ	0xFE8
  1406                           status	equ	0xFD8
  1407                           
  1408 ;; *************** function _toggleLEDs0167 *****************
  1409 ;; Defined at:
  1410 ;;		line 107 in file "serial_2024.c"
  1411 ;; Parameters:    Size  Location     Type
  1412 ;;		None
  1413 ;; Auto vars:     Size  Location     Type
  1414 ;;		None
  1415 ;; Return value:  Size  Location     Type
  1416 ;;                  1    wreg      void 
  1417 ;; Registers used:
  1418 ;;		wreg, status,2, status,0
  1419 ;; Tracked objects:
  1420 ;;		On entry : 0/0
  1421 ;;		On exit  : 0/0
  1422 ;;		Unchanged: 0/0
  1423 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1424 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1425 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1426 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1427 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1428 ;;Total ram usage:        0 bytes
  1429 ;; Hardware stack levels used:    1
  1430 ;; This function calls:
  1431 ;;		Nothing
  1432 ;; This function is called by:
  1433 ;;		_main
  1434 ;; This function uses a non-reentrant model
  1435 ;;
  1436                           
  1437                           	psect	text8
  1438  001940                     __ptext8:
  1439                           	opt stack 0
  1440  001940                     _toggleLEDs0167:
  1441                           	opt stack 30
  1442                           
  1443                           ;serial_2024.c: 108: LATD ^= 0xC3;
  1444                           
  1445                           ;incstack = 0
  1446  001940  0EC3               	movlw	195
  1447  001942  1A8C               	xorwf	3980,f,c	;volatile
  1448  001944  0012               	return		;funcret
  1449  001946                     __end_of_toggleLEDs0167:
  1450                           	opt stack 0
  1451                           postinc0	equ	0xFEE
  1452                           wreg	equ	0xFE8
  1453                           status	equ	0xFD8
  1454                           
  1455 ;; *************** function _setupSerial *****************
  1456 ;; Defined at:
  1457 ;;		line 3 in file "my_ser.c"
  1458 ;; Parameters:    Size  Location     Type
  1459 ;;		None
  1460 ;; Auto vars:     Size  Location     Type
  1461 ;;  dummy           1    0[COMRAM] unsigned char 
  1462 ;; Return value:  Size  Location     Type
  1463 ;;                  1    wreg      void 
  1464 ;; Registers used:
  1465 ;;		wreg, status,2
  1466 ;; Tracked objects:
  1467 ;;		On entry : 0/0
  1468 ;;		On exit  : 0/0
  1469 ;;		Unchanged: 0/0
  1470 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1471 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1472 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1473 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1474 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1475 ;;Total ram usage:        1 bytes
  1476 ;; Hardware stack levels used:    1
  1477 ;; This function calls:
  1478 ;;		Nothing
  1479 ;; This function is called by:
  1480 ;;		_main
  1481 ;; This function uses a non-reentrant model
  1482 ;;
  1483                           
  1484                           	psect	text9
  1485  001842                     __ptext9:
  1486                           	opt stack 0
  1487  001842                     _setupSerial:
  1488                           	opt stack 30
  1489                           
  1490                           ;my_ser.c: 4: unsigned char dummy;
  1491                           ;my_ser.c: 5: BAUDCONbits.BRG16 = 0;
  1492                           
  1493                           ;incstack = 0
  1494  001842  96B8               	bcf	4024,3,c	;volatile
  1495                           
  1496                           ;my_ser.c: 6: TXSTA = 0;
  1497  001844  0E00               	movlw	0
  1498  001846  6EAC               	movwf	4012,c	;volatile
  1499                           
  1500                           ;my_ser.c: 7: SPBRG = 25;
  1501  001848  0E19               	movlw	25
  1502  00184A  6EAF               	movwf	4015,c	;volatile
  1503                           
  1504                           ;my_ser.c: 8: SPBRGH = 0;
  1505  00184C  0E00               	movlw	0
  1506  00184E  6EB0               	movwf	4016,c	;volatile
  1507                           
  1508                           ;my_ser.c: 9: TXSTAbits.BRGH = 1;
  1509  001850  84AC               	bsf	4012,2,c	;volatile
  1510                           
  1511                           ;my_ser.c: 10: TXSTAbits.TXEN = 1;
  1512  001852  8AAC               	bsf	4012,5,c	;volatile
  1513                           
  1514                           ;my_ser.c: 12: RCSTA = 0;
  1515  001854  0E00               	movlw	0
  1516  001856  6EAB               	movwf	4011,c	;volatile
  1517                           
  1518                           ;my_ser.c: 13: RCSTAbits.CREN = 1;
  1519  001858  88AB               	bsf	4011,4,c	;volatile
  1520                           
  1521                           ;my_ser.c: 14: RCSTAbits.SPEN = 1;
  1522  00185A  8EAB               	bsf	4011,7,c	;volatile
  1523                           
  1524                           ;my_ser.c: 15: ;
  1525                           ;my_ser.c: 16: dummy = RCREG;
  1526  00185C  CFAE F001          	movff	4014,setupSerial@dummy	;volatile
  1527                           
  1528                           ;my_ser.c: 17: dummy = RCREG;
  1529  001860  CFAE F001          	movff	4014,setupSerial@dummy	;volatile
  1530  001864  0012               	return	
  1531  001866                     __end_of_setupSerial:
  1532                           	opt stack 0
  1533                           postinc0	equ	0xFEE
  1534                           wreg	equ	0xFE8
  1535                           status	equ	0xFD8
  1536                           
  1537 ;; *************** function _sendBinaryStatus *****************
  1538 ;; Defined at:
  1539 ;;		line 153 in file "serial_2024.c"
  1540 ;; Parameters:    Size  Location     Type
  1541 ;;		None
  1542 ;; Auto vars:     Size  Location     Type
  1543 ;;  message        40   37[COMRAM] unsigned char [40]
  1544 ;; Return value:  Size  Location     Type
  1545 ;;                  1    wreg      void 
  1546 ;; Registers used:
  1547 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1548 ;; Tracked objects:
  1549 ;;		On entry : 0/0
  1550 ;;		On exit  : 0/0
  1551 ;;		Unchanged: 0/0
  1552 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1553 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1554 ;;      Locals:        40       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1555 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1556 ;;      Totals:        40       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1557 ;;Total ram usage:       40 bytes
  1558 ;; Hardware stack levels used:    1
  1559 ;; Hardware stack levels required when called:    2
  1560 ;; This function calls:
  1561 ;;		_intToBinaryString
  1562 ;;		_send_string_no_lib
  1563 ;;		_sprintf
  1564 ;; This function is called by:
  1565 ;;		_main
  1566 ;; This function uses a non-reentrant model
  1567 ;;
  1568                           
  1569                           	psect	text10
  1570  00171C                     __ptext10:
  1571                           	opt stack 0
  1572  00171C                     _sendBinaryStatus:
  1573                           	opt stack 28
  1574                           
  1575                           ;serial_2024.c: 154: intToBinaryString(PORTD, binaryString, sizeof(binaryString));
  1576                           
  1577                           ;incstack = 0
  1578  00171C  CF83 F001          	movff	3971,intToBinaryString@value	;volatile
  1579  001720  6A02               	clrf	intToBinaryString@value+1,c
  1580  001722  0E80               	movlw	low _binaryString
  1581  001724  6E03               	movwf	intToBinaryString@buffer,c
  1582  001726  0E00               	movlw	high _binaryString
  1583  001728  6E04               	movwf	intToBinaryString@buffer+1,c
  1584  00172A  0E00               	movlw	0
  1585  00172C  6E06               	movwf	intToBinaryString@bufferSize+1,c
  1586  00172E  0E09               	movlw	9
  1587  001730  6E05               	movwf	intToBinaryString@bufferSize,c
  1588  001732  EC05  F00B         	call	_intToBinaryString	;wreg free
  1589                           
  1590                           ;serial_2024.c: 155: char message[40];
  1591                           ;serial_2024.c: 156: sprintf(message, "LEDs Bin: %s\n", binaryString);
  1592  001736  0E26               	movlw	low sendBinaryStatus@message
  1593  001738  6E08               	movwf	sprintf@sp,c
  1594  00173A  0E00               	movlw	high sendBinaryStatus@message
  1595  00173C  6E09               	movwf	sprintf@sp+1,c
  1596  00173E  0E69               	movlw	low STR_1
  1597  001740  6E0A               	movwf	sprintf@f,c
  1598  001742  0E10               	movlw	high STR_1
  1599  001744  6E0B               	movwf	sprintf@f+1,c
  1600  001746  0E80               	movlw	low _binaryString
  1601  001748  6E0C               	movwf	?_sprintf+4,c
  1602  00174A  0E00               	movlw	high _binaryString
  1603  00174C  6E0D               	movwf	?_sprintf+5,c
  1604  00174E  EC43  F008         	call	_sprintf	;wreg free
  1605                           
  1606                           ;serial_2024.c: 157: send_string_no_lib((unsigned char *)message);
  1607  001752  0E26               	movlw	low sendBinaryStatus@message
  1608  001754  6E02               	movwf	send_string_no_lib@p,c
  1609  001756  0E00               	movlw	high sendBinaryStatus@message
  1610  001758  6E03               	movwf	send_string_no_lib@p+1,c
  1611  00175A  EC3A  F00B         	call	_send_string_no_lib	;wreg free
  1612  00175E  0012               	return		;funcret
  1613  001760                     __end_of_sendBinaryStatus:
  1614                           	opt stack 0
  1615                           postinc0	equ	0xFEE
  1616                           wreg	equ	0xFE8
  1617                           status	equ	0xFD8
  1618                           
  1619 ;; *************** function _sprintf *****************
  1620 ;; Defined at:
  1621 ;;		line 492 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\doprnt.c"
  1622 ;; Parameters:    Size  Location     Type
  1623 ;;  sp              2    7[COMRAM] PTR unsigned char 
  1624 ;;		 -> main@Buffer(32), sendBinaryStatus@message(40), 
  1625 ;;  f               2    9[COMRAM] PTR const unsigned char 
  1626 ;;		 -> STR_12(14), STR_3(42), STR_1(14), 
  1627 ;; Auto vars:     Size  Location     Type
  1628 ;;  idx             1   23[COMRAM] unsigned char 
  1629 ;;  tmpval          4    0        struct .
  1630 ;;  width           2   34[COMRAM] int 
  1631 ;;  len             2   32[COMRAM] unsigned int 
  1632 ;;  cp              2   30[COMRAM] PTR const unsigned char 
  1633 ;;		 -> STR_13(7), STR_11(4), STR_10(3), STR_9(4), 
  1634 ;;		 -> STR_8(3), STR_7(4), STR_6(3), STR_5(4), 
  1635 ;;		 -> STR_4(3), binaryString(9), 
  1636 ;;  ap              2   28[COMRAM] PTR void [1]
  1637 ;;		 -> ?_sprintf(2), 
  1638 ;;  val             2   25[COMRAM] unsigned int 
  1639 ;;  c               1   36[COMRAM] char 
  1640 ;;  prec            1   27[COMRAM] char 
  1641 ;;  flag            1   24[COMRAM] unsigned char 
  1642 ;; Return value:  Size  Location     Type
  1643 ;;                  2    7[COMRAM] int 
  1644 ;; Registers used:
  1645 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1646 ;; Tracked objects:
  1647 ;;		On entry : 0/0
  1648 ;;		On exit  : 0/0
  1649 ;;		Unchanged: 0/0
  1650 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1651 ;;      Params:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1652 ;;      Locals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1653 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1654 ;;      Totals:        30       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1655 ;;Total ram usage:       30 bytes
  1656 ;; Hardware stack levels used:    1
  1657 ;; Hardware stack levels required when called:    1
  1658 ;; This function calls:
  1659 ;;		___lwdiv
  1660 ;;		___wmul
  1661 ;;		_isdigit
  1662 ;; This function is called by:
  1663 ;;		_sendBinaryStatus
  1664 ;;		_main
  1665 ;; This function uses a non-reentrant model
  1666 ;;
  1667                           
  1668                           	psect	text11
  1669  001086                     __ptext11:
  1670                           	opt stack 0
  1671  001086                     _sprintf:
  1672                           	opt stack 29
  1673                           
  1674                           ;doprnt.c: 494: va_list ap;
  1675                           ;doprnt.c: 499: signed char c;
  1676                           ;doprnt.c: 501: int width;
  1677                           ;doprnt.c: 506: signed char prec;
  1678                           ;doprnt.c: 508: unsigned char flag;
  1679                           ;doprnt.c: 523: union {
  1680                           ;doprnt.c: 524: unsigned long vd;
  1681                           ;doprnt.c: 525: double integ;
  1682                           ;doprnt.c: 526: } tmpval;
  1683                           ;doprnt.c: 528: unsigned int val;
  1684                           ;doprnt.c: 529: unsigned len;
  1685                           ;doprnt.c: 530: const char * cp;
  1686                           ;doprnt.c: 533: *ap = __va_start();
  1687                           
  1688                           ;incstack = 0
  1689  001086  0E0C               	movlw	low (?_sprintf+4)
  1690  001088  6E1D               	movwf	sprintf@ap,c
  1691  00108A  0E00               	movlw	high (?_sprintf+4)
  1692  00108C  6E1E               	movwf	sprintf@ap+1,c
  1693                           
  1694                           ;doprnt.c: 536: while(c = *f++) {
  1695  00108E  D18A               	goto	u1020
  1696  001090                     
  1697                           ;doprnt.c: 538: if(c != '%')
  1698  001090  0E25               	movlw	37
  1699  001092  1825               	xorwf	sprintf@c,w,c
  1700  001094  B4D8               	btfsc	status,2,c
  1701  001096  D009               	goto	l208
  1702                           
  1703                           ;doprnt.c: 540: {
  1704                           ;doprnt.c: 541: ((*sp++ = (c)));
  1705  001098  C008  FFD9         	movff	sprintf@sp,fsr2l
  1706  00109C  C009  FFDA         	movff	sprintf@sp+1,fsr2h
  1707  0010A0  C025  FFDF         	movff	sprintf@c,indf2
  1708  0010A4  4A08               	infsnz	sprintf@sp,f,c
  1709  0010A6  2A09               	incf	sprintf@sp+1,f,c
  1710                           
  1711                           ;doprnt.c: 542: continue;
  1712  0010A8  D17D               	goto	u1020
  1713  0010AA                     l208:
  1714                           
  1715                           ;doprnt.c: 543: }
  1716                           ;doprnt.c: 546: width = 0;
  1717  0010AA  0E00               	movlw	0
  1718  0010AC  6E24               	movwf	sprintf@width+1,c
  1719  0010AE  0E00               	movlw	0
  1720  0010B0  6E23               	movwf	sprintf@width,c
  1721                           
  1722                           ;doprnt.c: 548: flag = 0;
  1723  0010B2  0E00               	movlw	0
  1724  0010B4  6E19               	movwf	sprintf@flag,c
  1725                           
  1726                           ;doprnt.c: 551: switch(*f) {
  1727                           
  1728                           ;doprnt.c: 550: for(;;) {
  1729  0010B6  D003               	goto	l210
  1730  0010B8                     
  1731                           ;doprnt.c: 580: flag |= 0x04;
  1732  0010B8  8419               	bsf	sprintf@flag,2,c
  1733                           
  1734                           ;doprnt.c: 581: f++;
  1735  0010BA  4A0A               	infsnz	sprintf@f,f,c
  1736  0010BC  2A0B               	incf	sprintf@f+1,f,c
  1737  0010BE                     l210:
  1738  0010BE  C00A  FFF6         	movff	sprintf@f,tblptrl
  1739  0010C2  C00B  FFF7         	movff	sprintf@f+1,tblptrh
  1740  0010C6                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  1741  0010C6  6AF8               	clrf	tblptru,c
  1742  0010C8                     	endif
  1743  0010C8                     	if	0	;tblptru may be non-zero
  1744  0010C8                     	endif
  1745  0010C8  0008               	tblrd		*
  1746  0010CA  50F5               	movf	tablat,w,c
  1747                           
  1748                           ; Switch size 1, requested type "space"
  1749                           ; Number of cases is 1, Range of values is 48 to 48
  1750                           ; switch strategies available:
  1751                           ; Name         Instructions Cycles
  1752                           ; simple_byte            4     3 (average)
  1753                           ;	Chosen strategy is simple_byte
  1754  0010CC  0A30               	xorlw	48	; case 48
  1755  0010CE  B4D8               	btfsc	status,2,c
  1756  0010D0  D7F3               	goto	l211
  1757                           
  1758                           ;doprnt.c: 597: if(isdigit((unsigned)*f)) {
  1759                           
  1760                           ;doprnt.c: 586: }
  1761                           
  1762                           ;doprnt.c: 585: break;
  1763  0010D2  C00A  FFF6         	movff	sprintf@f,tblptrl
  1764  0010D6  C00B  FFF7         	movff	sprintf@f+1,tblptrh
  1765  0010DA                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  1766  0010DA  6AF8               	clrf	tblptru,c
  1767  0010DC                     	endif
  1768  0010DC                     	if	0	;tblptru may be non-zero
  1769  0010DC                     	endif
  1770  0010DC  0008               	tblrd		*
  1771  0010DE  50F5               	movf	tablat,w,c
  1772  0010E0  EC60  F00C         	call	_isdigit
  1773  0010E4  A0D8               	btfss	status,0,c
  1774  0010E6  D0AE               	goto	l218
  1775                           
  1776                           ;doprnt.c: 598: width = 0;
  1777  0010E8  0E00               	movlw	0
  1778  0010EA  6E24               	movwf	sprintf@width+1,c
  1779  0010EC  0E00               	movlw	0
  1780  0010EE  6E23               	movwf	sprintf@width,c
  1781  0010F0                     
  1782                           ;doprnt.c: 600: width *= 10;
  1783  0010F0  C023  F001         	movff	sprintf@width,___wmul@multiplier
  1784  0010F4  C024  F002         	movff	sprintf@width+1,___wmul@multiplier+1
  1785  0010F8  0E00               	movlw	0
  1786  0010FA  6E04               	movwf	___wmul@multiplicand+1,c
  1787  0010FC  0E0A               	movlw	10
  1788  0010FE  6E03               	movwf	___wmul@multiplicand,c
  1789  001100  ECFB  F00B         	call	___wmul	;wreg free
  1790  001104  C001  F023         	movff	?___wmul,sprintf@width
  1791  001108  C002  F024         	movff	?___wmul+1,sprintf@width+1
  1792                           
  1793                           ;doprnt.c: 601: width += *f++ - '0';
  1794  00110C  0ED0               	movlw	208
  1795  00110E  6E14               	movwf	??_sprintf& (0+255),c
  1796  001110  0EFF               	movlw	255
  1797  001112  6E15               	movwf	(??_sprintf+1)& (0+255),c
  1798  001114  C00A  FFF6         	movff	sprintf@f,tblptrl
  1799  001118  C00B  FFF7         	movff	sprintf@f+1,tblptrh
  1800  00111C                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  1801  00111C  6AF8               	clrf	tblptru,c
  1802  00111E                     	endif
  1803  00111E                     	if	0	;tblptru may be non-zero
  1804  00111E                     	endif
  1805  00111E  0008               	tblrd		*
  1806  001120  50F5               	movf	tablat,w,c
  1807  001122  6E16               	movwf	(??_sprintf+2)& (0+255),c
  1808  001124  6A17               	clrf	(??_sprintf+3)& (0+255),c
  1809  001126  5014               	movf	??_sprintf,w,c
  1810  001128  2616               	addwf	??_sprintf+2,f,c
  1811  00112A  5015               	movf	??_sprintf+1,w,c
  1812  00112C  2217               	addwfc	??_sprintf+3,f,c
  1813  00112E  5016               	movf	??_sprintf+2,w,c
  1814  001130  2623               	addwf	sprintf@width,f,c
  1815  001132  5017               	movf	??_sprintf+3,w,c
  1816  001134  2224               	addwfc	sprintf@width+1,f,c
  1817  001136  4A0A               	infsnz	sprintf@f,f,c
  1818  001138  2A0B               	incf	sprintf@f+1,f,c
  1819                           
  1820                           ;doprnt.c: 602: } while(isdigit((unsigned)*f));
  1821  00113A  C00A  FFF6         	movff	sprintf@f,tblptrl
  1822  00113E  C00B  FFF7         	movff	sprintf@f+1,tblptrh
  1823  001142                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  1824  001142  6AF8               	clrf	tblptru,c
  1825  001144                     	endif
  1826  001144                     	if	0	;tblptru may be non-zero
  1827  001144                     	endif
  1828  001144  0008               	tblrd		*
  1829  001146  50F5               	movf	tablat,w,c
  1830  001148  EC60  F00C         	call	_isdigit
  1831  00114C  A0D8               	btfss	status,0,c
  1832  00114E  D07A               	goto	l218
  1833  001150  D7CF               	goto	l216
  1834  001152                     
  1835                           ;doprnt.c: 734: cp = (*(const char * *)__va_arg((*(const char * **)ap), (const char *)0)
      +                          );
  1836  001152  C01D  FFD9         	movff	sprintf@ap,fsr2l
  1837  001156  C01E  FFDA         	movff	sprintf@ap+1,fsr2h
  1838  00115A  CFDE F01F          	movff	postinc2,sprintf@cp
  1839  00115E  CFDD F020          	movff	postdec2,sprintf@cp+1
  1840  001162  0E02               	movlw	2
  1841  001164  261D               	addwf	sprintf@ap,f,c
  1842  001166  0E00               	movlw	0
  1843  001168  221E               	addwfc	sprintf@ap+1,f,c
  1844                           
  1845                           ;doprnt.c: 740: if(!cp)
  1846  00116A  501F               	movf	sprintf@cp,w,c
  1847  00116C  1020               	iorwf	sprintf@cp+1,w,c
  1848  00116E  A4D8               	btfss	status,2,c
  1849  001170  D004               	goto	l225
  1850                           
  1851                           ;doprnt.c: 741: cp = "(null)";
  1852  001172  0E77               	movlw	low STR_13
  1853  001174  6E1F               	movwf	sprintf@cp,c
  1854  001176  0E10               	movlw	high STR_13
  1855  001178  6E20               	movwf	sprintf@cp+1,c
  1856  00117A                     l225:
  1857                           
  1858                           ;doprnt.c: 745: len = 0;
  1859  00117A  0E00               	movlw	0
  1860  00117C  6E22               	movwf	sprintf@len+1,c
  1861  00117E  0E00               	movlw	0
  1862  001180  6E21               	movwf	sprintf@len,c
  1863                           
  1864                           ;doprnt.c: 746: while(cp[len])
  1865  001182  D002               	goto	l226
  1866  001184                     
  1867                           ;doprnt.c: 747: len++;
  1868  001184  4A21               	infsnz	sprintf@len,f,c
  1869  001186  2A22               	incf	sprintf@len+1,f,c
  1870  001188                     l226:
  1871  001188  5021               	movf	sprintf@len,w,c
  1872  00118A  241F               	addwf	sprintf@cp,w,c
  1873  00118C  6E14               	movwf	??_sprintf& (0+255),c
  1874  00118E  5022               	movf	sprintf@len+1,w,c
  1875  001190  2020               	addwfc	sprintf@cp+1,w,c
  1876  001192  6E15               	movwf	(??_sprintf+1)& (0+255),c
  1877  001194  C014  FFF6         	movff	??_sprintf,tblptrl
  1878  001198  C015  FFF7         	movff	??_sprintf+1,tblptrh
  1879  00119C  0E00               	movlw	low (__smallconst shr (0+16))
  1880  00119E  6EF8               	movwf	tblptru,c
  1881  0011A0  0E0F               	movlw	(high __ramtop+-1)
  1882  0011A2  64F7               	cpfsgt	tblptrh,c
  1883  0011A4  D003               	bra	u877
  1884  0011A6  0008               	tblrd		*
  1885  0011A8  50F5               	movf	tablat,w,c
  1886  0011AA  D005               	bra	u870
  1887  0011AC                     u877:
  1888  0011AC  CFF6 FFE1          	movff	tblptrl,fsr1l
  1889  0011B0  CFF7 FFE2          	movff	tblptrh,fsr1h
  1890  0011B4  50E7               	movf	indf1,w,c
  1891  0011B6                     u870:
  1892  0011B6  0900               	iorlw	0
  1893  0011B8  A4D8               	btfss	status,2,c
  1894  0011BA  D7E4               	goto	l227
  1895                           
  1896                           ;doprnt.c: 757: if(width > len)
  1897  0011BC  5023               	movf	sprintf@width,w,c
  1898  0011BE  5C21               	subwf	sprintf@len,w,c
  1899  0011C0  5024               	movf	sprintf@width+1,w,c
  1900  0011C2  5822               	subwfb	sprintf@len+1,w,c
  1901  0011C4  B0D8               	btfsc	status,0,c
  1902  0011C6  D005               	goto	l229
  1903                           
  1904                           ;doprnt.c: 758: width -= len;
  1905  0011C8  5021               	movf	sprintf@len,w,c
  1906  0011CA  5E23               	subwf	sprintf@width,f,c
  1907  0011CC  5022               	movf	sprintf@len+1,w,c
  1908  0011CE  5A24               	subwfb	sprintf@width+1,f,c
  1909  0011D0  D00D               	goto	l231
  1910  0011D2                     l229:
  1911                           
  1912                           ;doprnt.c: 759: else
  1913                           ;doprnt.c: 760: width = 0;
  1914  0011D2  0E00               	movlw	0
  1915  0011D4  6E24               	movwf	sprintf@width+1,c
  1916  0011D6  0E00               	movlw	0
  1917  0011D8  6E23               	movwf	sprintf@width,c
  1918                           
  1919                           ;doprnt.c: 764: while(width--)
  1920  0011DA  D008               	goto	l231
  1921  0011DC                     l1410:
  1922                           
  1923                           ;doprnt.c: 765: ((*sp++ = (' ')));
  1924  0011DC  C008  FFD9         	movff	sprintf@sp,fsr2l
  1925  0011E0  C009  FFDA         	movff	sprintf@sp+1,fsr2h
  1926  0011E4  0E20               	movlw	32
  1927  0011E6  6EDF               	movwf	indf2,c
  1928  0011E8  4A08               	infsnz	sprintf@sp,f,c
  1929  0011EA  2A09               	incf	sprintf@sp+1,f,c
  1930  0011EC                     l231:
  1931  0011EC  0623               	decf	sprintf@width,f,c
  1932  0011EE  A0D8               	btfss	status,0,c
  1933  0011F0  0624               	decf	sprintf@width+1,f,c
  1934  0011F2  2823               	incf	sprintf@width,w,c
  1935  0011F4  E1F3               	bnz	l1410
  1936  0011F6  2824               	incf	sprintf@width+1,w,c
  1937  0011F8  B4D8               	btfsc	status,2,c
  1938  0011FA  D01B               	goto	l234
  1939  0011FC  D7EF               	goto	l232
  1940  0011FE                     l1416:
  1941                           
  1942                           ;doprnt.c: 768: ((*sp++ = (*cp++)));
  1943  0011FE  C01F  FFF6         	movff	sprintf@cp,tblptrl
  1944  001202  C020  FFF7         	movff	sprintf@cp+1,tblptrh
  1945  001206  0E00               	movlw	low (__smallconst shr (0+16))
  1946  001208  6EF8               	movwf	tblptru,c
  1947  00120A  C008  FFD9         	movff	sprintf@sp,fsr2l
  1948  00120E  C009  FFDA         	movff	sprintf@sp+1,fsr2h
  1949  001212  0E0F               	movlw	(high __ramtop+-1)
  1950  001214  64F7               	cpfsgt	tblptrh,c
  1951  001216  D003               	bra	u917
  1952  001218  0008               	tblrd		*
  1953  00121A  50F5               	movf	tablat,w,c
  1954  00121C  D005               	bra	u910
  1955  00121E                     u917:
  1956  00121E  CFF6 FFE1          	movff	tblptrl,fsr1l
  1957  001222  CFF7 FFE2          	movff	tblptrh,fsr1h
  1958  001226  50E7               	movf	indf1,w,c
  1959  001228                     u910:
  1960  001228  6EDF               	movwf	indf2,c
  1961  00122A  4A1F               	infsnz	sprintf@cp,f,c
  1962  00122C  2A20               	incf	sprintf@cp+1,f,c
  1963  00122E  4A08               	infsnz	sprintf@sp,f,c
  1964  001230  2A09               	incf	sprintf@sp+1,f,c
  1965  001232                     l234:
  1966  001232  0621               	decf	sprintf@len,f,c
  1967  001234  A0D8               	btfss	status,0,c
  1968  001236  0622               	decf	sprintf@len+1,f,c
  1969  001238  2821               	incf	sprintf@len,w,c
  1970  00123A  E1E1               	bnz	l1416
  1971  00123C  2822               	incf	sprintf@len+1,w,c
  1972  00123E  B4D8               	btfsc	status,2,c
  1973  001240  D0B1               	goto	u1020
  1974  001242  D7DD               	goto	l235
  1975  001244                     l218:
  1976  001244  C00A  FFF6         	movff	sprintf@f,tblptrl
  1977  001248  C00B  FFF7         	movff	sprintf@f+1,tblptrh
  1978  00124C  4A0A               	infsnz	sprintf@f,f,c
  1979  00124E  2A0B               	incf	sprintf@f+1,f,c
  1980  001250                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  1981  001250  6AF8               	clrf	tblptru,c
  1982  001252                     	endif
  1983  001252                     	if	0	;tblptru may be non-zero
  1984  001252                     	endif
  1985  001252  0008               	tblrd		*
  1986  001254  CFF5 F025          	movff	tablat,sprintf@c
  1987  001258  5025               	movf	sprintf@c,w,c
  1988                           
  1989                           ; Switch size 1, requested type "space"
  1990                           ; Number of cases is 4, Range of values is 0 to 120
  1991                           ; switch strategies available:
  1992                           ; Name         Instructions Cycles
  1993                           ; simple_byte           13     7 (average)
  1994                           ;	Chosen strategy is simple_byte
  1995  00125A  0A00               	xorlw	0	; case 0
  1996  00125C  B4D8               	btfsc	status,2,c
  1997  00125E  D0AF               	goto	u1030
  1998  001260  0A58               	xorlw	88	; case 88
  1999  001262  B4D8               	btfsc	status,2,c
  2000  001264  D006               	goto	l223
  2001  001266  0A2B               	xorlw	43	; case 115
  2002  001268  B4D8               	btfsc	status,2,c
  2003  00126A  D773               	goto	l224
  2004  00126C  0A0B               	xorlw	11	; case 120
  2005  00126E  A4D8               	btfss	status,2,c
  2006  001270  D099               	goto	u1020
  2007  001272                     l223:
  2008                           
  2009                           ;doprnt.c: 1273: {
  2010                           ;doprnt.c: 1286: val = (*(unsigned *)__va_arg((*(unsigned **)ap), (unsigned)0));
  2011  001272  C01D  FFD9         	movff	sprintf@ap,fsr2l
  2012  001276  C01E  FFDA         	movff	sprintf@ap+1,fsr2h
  2013  00127A  CFDE F01A          	movff	postinc2,sprintf@val
  2014  00127E  CFDD F01B          	movff	postdec2,sprintf@val+1
  2015  001282  0E02               	movlw	2
  2016  001284  261D               	addwf	sprintf@ap,f,c
  2017  001286  0E00               	movlw	0
  2018  001288  221E               	addwfc	sprintf@ap+1,f,c
  2019                           
  2020                           ;doprnt.c: 1287: }
  2021                           ;doprnt.c: 1316: for(c = 1 ; c != sizeof hexpowers/sizeof hexpowers[0] ; c++)
  2022  00128A  0E01               	movlw	1
  2023  00128C  6E25               	movwf	sprintf@c,c
  2024  00128E                     l1434:
  2025  00128E  0E04               	movlw	4
  2026  001290  1825               	xorwf	sprintf@c,w,c
  2027  001292  B4D8               	btfsc	status,2,c
  2028  001294  D015               	goto	u950
  2029                           
  2030                           ;doprnt.c: 1317: if(val < hexpowers[c])
  2031  001296  5025               	movf	sprintf@c,w,c
  2032  001298  0D02               	mullw	2
  2033  00129A  0E01               	movlw	low _hexpowers
  2034  00129C  24F3               	addwf	prodl,w,c
  2035  00129E  6EF6               	movwf	tblptrl,c
  2036  0012A0  0E10               	movlw	high _hexpowers
  2037  0012A2  20F4               	addwfc	prodh,w,c
  2038  0012A4  6EF7               	movwf	tblptrh,c
  2039  0012A6                     	if	1	;There are 3 active tblptr bytes
  2040  0012A6  6AF8               	clrf	tblptru,c
  2041  0012A8  0E00               	movlw	low (__mediumconst shr (0+16))
  2042  0012AA  22F8               	addwfc	tblptru,f,c
  2043  0012AC                     	endif
  2044  0012AC  0009               	tblrd		*+
  2045  0012AE  50F5               	movf	tablat,w,c
  2046  0012B0  5C1A               	subwf	sprintf@val,w,c
  2047  0012B2  0009               	tblrd		*+
  2048  0012B4  50F5               	movf	tablat,w,c
  2049  0012B6  581B               	subwfb	sprintf@val+1,w,c
  2050  0012B8  A0D8               	btfss	status,0,c
  2051  0012BA  D002               	goto	u950
  2052                           
  2053                           ;doprnt.c: 1318: break;
  2054  0012BC  2A25               	incf	sprintf@c,f,c
  2055  0012BE  D7E7               	goto	l1434
  2056  0012C0                     u950:
  2057                           
  2058                           ;doprnt.c: 1381: if(width > c)
  2059  0012C0  0E80               	movlw	128
  2060  0012C2  BE25               	btfsc	sprintf@c,7,c
  2061  0012C4  0E7F               	movlw	127
  2062  0012C6  6E14               	movwf	??_sprintf& (0+255),c
  2063  0012C8  5023               	movf	sprintf@width,w,c
  2064  0012CA  5C25               	subwf	sprintf@c,w,c
  2065  0012CC  5024               	movf	sprintf@width+1,w,c
  2066  0012CE  0A80               	xorlw	128
  2067  0012D0  5814               	subwfb	??_sprintf& (0+255),w,c
  2068  0012D2  B0D8               	btfsc	status,0,c
  2069  0012D4  D007               	goto	l241
  2070                           
  2071                           ;doprnt.c: 1382: width -= c;
  2072  0012D6  5025               	movf	sprintf@c,w,c
  2073  0012D8  5E23               	subwf	sprintf@width,f,c
  2074  0012DA  0E00               	movlw	0
  2075  0012DC  BE25               	btfsc	sprintf@c,7,c
  2076  0012DE  0EFF               	movlw	255
  2077  0012E0  5A24               	subwfb	sprintf@width+1,f,c
  2078  0012E2  D004               	goto	l242
  2079  0012E4                     l241:
  2080                           
  2081                           ;doprnt.c: 1383: else
  2082                           ;doprnt.c: 1384: width = 0;
  2083  0012E4  0E00               	movlw	0
  2084  0012E6  6E24               	movwf	sprintf@width+1,c
  2085  0012E8  0E00               	movlw	0
  2086  0012EA  6E23               	movwf	sprintf@width,c
  2087  0012EC                     l242:
  2088                           
  2089                           ;doprnt.c: 1387: if(flag & 0x04) {
  2090  0012EC  A419               	btfss	sprintf@flag,2,c
  2091  0012EE  D010               	goto	l243
  2092  0012F0                     
  2093                           ;doprnt.c: 1415: if(width)
  2094  0012F0  5023               	movf	sprintf@width,w,c
  2095  0012F2  1024               	iorwf	sprintf@width+1,w,c
  2096  0012F4  B4D8               	btfsc	status,2,c
  2097  0012F6  D01F               	goto	u1010
  2098                           
  2099                           ;doprnt.c: 1417: ((*sp++ = ('0')));
  2100                           
  2101                           ;doprnt.c: 1416: do
  2102  0012F8  C008  FFD9         	movff	sprintf@sp,fsr2l
  2103  0012FC  C009  FFDA         	movff	sprintf@sp+1,fsr2h
  2104  001300  0E30               	movlw	48
  2105  001302  6EDF               	movwf	indf2,c
  2106  001304  4A08               	infsnz	sprintf@sp,f,c
  2107  001306  2A09               	incf	sprintf@sp+1,f,c
  2108                           
  2109                           ;doprnt.c: 1418: while(--width);
  2110  001308  0623               	decf	sprintf@width,f,c
  2111  00130A  A0D8               	btfss	status,0,c
  2112  00130C  0624               	decf	sprintf@width+1,f,c
  2113  00130E  D7F0               	goto	L6
  2114  001310                     l243:
  2115                           
  2116                           ;doprnt.c: 1422: {
  2117                           ;doprnt.c: 1424: if(width
  2118                           ;doprnt.c: 1428: )
  2119  001310  5023               	movf	sprintf@width,w,c
  2120  001312  1024               	iorwf	sprintf@width+1,w,c
  2121  001314  B4D8               	btfsc	status,2,c
  2122  001316  D00F               	goto	u1010
  2123  001318                     u1000:
  2124                           
  2125                           ;doprnt.c: 1430: ((*sp++ = (' ')));
  2126                           
  2127                           ;doprnt.c: 1429: do
  2128  001318  C008  FFD9         	movff	sprintf@sp,fsr2l
  2129  00131C  C009  FFDA         	movff	sprintf@sp+1,fsr2h
  2130  001320  0E20               	movlw	32
  2131  001322  6EDF               	movwf	indf2,c
  2132  001324  4A08               	infsnz	sprintf@sp,f,c
  2133  001326  2A09               	incf	sprintf@sp+1,f,c
  2134                           
  2135                           ;doprnt.c: 1431: while(--width);
  2136  001328  0623               	decf	sprintf@width,f,c
  2137  00132A  A0D8               	btfss	status,0,c
  2138  00132C  0624               	decf	sprintf@width+1,f,c
  2139  00132E  5023               	movf	sprintf@width,w,c
  2140  001330  1024               	iorwf	sprintf@width+1,w,c
  2141  001332  A4D8               	btfss	status,2,c
  2142  001334  D7F1               	goto	u1000
  2143  001336                     u1010:
  2144                           
  2145                           ;doprnt.c: 1469: }
  2146                           ;doprnt.c: 1472: prec = c;
  2147  001336  C025  F01C         	movff	sprintf@c,sprintf@prec
  2148                           
  2149                           ;doprnt.c: 1474: while(prec--) {
  2150  00133A  D030               	goto	l251
  2151  00133C                     
  2152                           ;doprnt.c: 1478: {
  2153                           ;doprnt.c: 1499: {
  2154                           ;doprnt.c: 1500: unsigned char idx = (val / hexpowers[prec]) & 0xF;
  2155  00133C  C01A  F001         	movff	sprintf@val,___lwdiv@dividend
  2156  001340  C01B  F002         	movff	sprintf@val+1,___lwdiv@dividend+1
  2157  001344  501C               	movf	sprintf@prec,w,c
  2158  001346  0D02               	mullw	2
  2159  001348  0E01               	movlw	low _hexpowers
  2160  00134A  24F3               	addwf	prodl,w,c
  2161  00134C  6EF6               	movwf	tblptrl,c
  2162  00134E  0E10               	movlw	high _hexpowers
  2163  001350  20F4               	addwfc	prodh,w,c
  2164  001352  6EF7               	movwf	tblptrh,c
  2165  001354                     	if	1	;There are 3 active tblptr bytes
  2166  001354  6AF8               	clrf	tblptru,c
  2167  001356  0E00               	movlw	low (__mediumconst shr (0+16))
  2168  001358  22F8               	addwfc	tblptru,f,c
  2169  00135A                     	endif
  2170  00135A  0009               	tblrd		*+
  2171  00135C  CFF5 F003          	movff	tablat,___lwdiv@divisor
  2172  001360  000A               	tblrd		*-
  2173  001362  CFF5 F004          	movff	tablat,___lwdiv@divisor+1
  2174  001366  EC65  F00B         	call	___lwdiv	;wreg free
  2175  00136A  5001               	movf	?___lwdiv,w,c
  2176  00136C  0B0F               	andlw	15
  2177  00136E  6E18               	movwf	sprintf@idx,c
  2178                           
  2179                           ;doprnt.c: 1504: c = "0123456789ABCDEF"[idx];
  2180  001370  5018               	movf	sprintf@idx,w,c
  2181  001372  0D01               	mullw	1
  2182  001374  0E4A               	movlw	low STR_14
  2183  001376  24F3               	addwf	prodl,w,c
  2184  001378  6EF6               	movwf	tblptrl,c
  2185  00137A  0E10               	movlw	high STR_14
  2186  00137C  20F4               	addwfc	prodh,w,c
  2187  00137E  6EF7               	movwf	tblptrh,c
  2188  001380                     	if	1	;There are 3 active tblptr bytes
  2189  001380  6AF8               	clrf	tblptru,c
  2190  001382  0E00               	movlw	low (__mediumconst shr (0+16))
  2191  001384  22F8               	addwfc	tblptru,f,c
  2192  001386                     	endif
  2193  001386  0008               	tblrd		*
  2194  001388  CFF5 F025          	movff	tablat,sprintf@c
  2195                           
  2196                           ;doprnt.c: 1508: }
  2197                           ;doprnt.c: 1523: }
  2198                           ;doprnt.c: 1524: ((*sp++ = (c)));
  2199  00138C  C008  FFD9         	movff	sprintf@sp,fsr2l
  2200  001390  C009  FFDA         	movff	sprintf@sp+1,fsr2h
  2201  001394  C025  FFDF         	movff	sprintf@c,indf2
  2202  001398  4A08               	infsnz	sprintf@sp,f,c
  2203  00139A  2A09               	incf	sprintf@sp+1,f,c
  2204  00139C                     l251:
  2205  00139C  061C               	decf	sprintf@prec,f,c
  2206  00139E  281C               	incf	sprintf@prec,w,c
  2207  0013A0  A4D8               	btfss	status,2,c
  2208  0013A2  D7CC               	goto	l252
  2209  0013A4                     u1020:
  2210  0013A4  C00A  FFF6         	movff	sprintf@f,tblptrl
  2211  0013A8  C00B  FFF7         	movff	sprintf@f+1,tblptrh
  2212  0013AC  4A0A               	infsnz	sprintf@f,f,c
  2213  0013AE  2A0B               	incf	sprintf@f+1,f,c
  2214  0013B0                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2215  0013B0  6AF8               	clrf	tblptru,c
  2216  0013B2                     	endif
  2217  0013B2                     	if	0	;tblptru may be non-zero
  2218  0013B2                     	endif
  2219  0013B2  0008               	tblrd		*
  2220  0013B4  CFF5 F025          	movff	tablat,sprintf@c
  2221  0013B8  5025               	movf	sprintf@c,w,c
  2222  0013BA  A4D8               	btfss	status,2,c
  2223  0013BC  D669               	goto	l207
  2224  0013BE                     u1030:
  2225                           
  2226                           ;doprnt.c: 1538: *sp = 0;
  2227                           
  2228                           ;doprnt.c: 1525: }
  2229                           ;doprnt.c: 1533: }
  2230                           ;doprnt.c: 1535: alldone:
  2231  0013BE  C008  FFD9         	movff	sprintf@sp,fsr2l
  2232  0013C2  C009  FFDA         	movff	sprintf@sp+1,fsr2h
  2233  0013C6  0E00               	movlw	0
  2234  0013C8  6EDF               	movwf	indf2,c
  2235  0013CA  0012               	return	
  2236  0013CC                     __end_of_sprintf:
  2237                           	opt stack 0
  2238                           tblptru	equ	0xFF8
  2239                           tblptrh	equ	0xFF7
  2240                           tblptrl	equ	0xFF6
  2241                           tablat	equ	0xFF5
  2242                           prodh	equ	0xFF4
  2243                           prodl	equ	0xFF3
  2244                           postinc0	equ	0xFEE
  2245                           wreg	equ	0xFE8
  2246                           indf1	equ	0xFE7
  2247                           fsr1h	equ	0xFE2
  2248                           fsr1l	equ	0xFE1
  2249                           indf2	equ	0xFDF
  2250                           postinc2	equ	0xFDE
  2251                           postdec2	equ	0xFDD
  2252                           fsr2h	equ	0xFDA
  2253                           fsr2l	equ	0xFD9
  2254                           status	equ	0xFD8
  2255                           
  2256 ;; *************** function _isdigit *****************
  2257 ;; Defined at:
  2258 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\isdigit.c"
  2259 ;; Parameters:    Size  Location     Type
  2260 ;;  c               1    wreg     unsigned char 
  2261 ;; Auto vars:     Size  Location     Type
  2262 ;;  c               1    2[COMRAM] unsigned char 
  2263 ;; Return value:  Size  Location     Type
  2264 ;;		None               void
  2265 ;; Registers used:
  2266 ;;		wreg, status,2, status,0
  2267 ;; Tracked objects:
  2268 ;;		On entry : 0/0
  2269 ;;		On exit  : 0/0
  2270 ;;		Unchanged: 0/0
  2271 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2272 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2273 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2274 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2275 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2276 ;;Total ram usage:        3 bytes
  2277 ;; Hardware stack levels used:    1
  2278 ;; This function calls:
  2279 ;;		Nothing
  2280 ;; This function is called by:
  2281 ;;		_sprintf
  2282 ;; This function uses a non-reentrant model
  2283 ;;
  2284                           
  2285                           	psect	text12
  2286  0018C0                     __ptext12:
  2287                           	opt stack 0
  2288  0018C0                     _isdigit:
  2289                           	opt stack 29
  2290                           
  2291                           ;incstack = 0
  2292                           ;isdigit@c stored from wreg
  2293  0018C0  6E03               	movwf	isdigit@c,c
  2294  0018C2  0E00               	movlw	0
  2295  0018C4  6E02               	movwf	_isdigit$955,c
  2296  0018C6  0E3A               	movlw	58
  2297  0018C8  6003               	cpfslt	isdigit@c,c
  2298  0018CA  D005               	goto	l585
  2299  0018CC  0E2F               	movlw	47
  2300  0018CE  6403               	cpfsgt	isdigit@c,c
  2301  0018D0  D002               	goto	l585
  2302  0018D2  0E01               	movlw	1
  2303  0018D4  6E02               	movwf	_isdigit$955,c
  2304  0018D6                     l585:
  2305  0018D6  C002  F001         	movff	_isdigit$955,??_isdigit
  2306  0018DA  3001               	rrcf	??_isdigit,w,c
  2307  0018DC  0012               	return	
  2308  0018DE                     __end_of_isdigit:
  2309                           	opt stack 0
  2310                           tblptru	equ	0xFF8
  2311                           tblptrh	equ	0xFF7
  2312                           tblptrl	equ	0xFF6
  2313                           tablat	equ	0xFF5
  2314                           prodh	equ	0xFF4
  2315                           prodl	equ	0xFF3
  2316                           postinc0	equ	0xFEE
  2317                           wreg	equ	0xFE8
  2318                           indf1	equ	0xFE7
  2319                           fsr1h	equ	0xFE2
  2320                           fsr1l	equ	0xFE1
  2321                           indf2	equ	0xFDF
  2322                           postinc2	equ	0xFDE
  2323                           postdec2	equ	0xFDD
  2324                           fsr2h	equ	0xFDA
  2325                           fsr2l	equ	0xFD9
  2326                           status	equ	0xFD8
  2327                           
  2328 ;; *************** function ___wmul *****************
  2329 ;; Defined at:
  2330 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\Umul16.c"
  2331 ;; Parameters:    Size  Location     Type
  2332 ;;  multiplier      2    0[COMRAM] unsigned int 
  2333 ;;  multiplicand    2    2[COMRAM] unsigned int 
  2334 ;; Auto vars:     Size  Location     Type
  2335 ;;  product         2    4[COMRAM] unsigned int 
  2336 ;; Return value:  Size  Location     Type
  2337 ;;                  2    0[COMRAM] unsigned int 
  2338 ;; Registers used:
  2339 ;;		wreg, status,2, status,0, prodl, prodh
  2340 ;; Tracked objects:
  2341 ;;		On entry : 0/0
  2342 ;;		On exit  : 0/0
  2343 ;;		Unchanged: 0/0
  2344 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2345 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2346 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2347 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2348 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2349 ;;Total ram usage:        6 bytes
  2350 ;; Hardware stack levels used:    1
  2351 ;; This function calls:
  2352 ;;		Nothing
  2353 ;; This function is called by:
  2354 ;;		_sprintf
  2355 ;; This function uses a non-reentrant model
  2356 ;;
  2357                           
  2358                           	psect	text13
  2359  0017F6                     __ptext13:
  2360                           	opt stack 0
  2361  0017F6                     ___wmul:
  2362                           	opt stack 29
  2363                           
  2364                           ;incstack = 0
  2365  0017F6  5001               	movf	___wmul@multiplier,w,c
  2366  0017F8  0203               	mulwf	___wmul@multiplicand,c
  2367  0017FA  CFF3 F005          	movff	prodl,___wmul@product
  2368  0017FE  CFF4 F006          	movff	prodh,___wmul@product+1
  2369  001802  5001               	movf	___wmul@multiplier,w,c
  2370  001804  0204               	mulwf	___wmul@multiplicand+1,c
  2371  001806  50F3               	movf	prodl,w,c
  2372  001808  2606               	addwf	___wmul@product+1,f,c
  2373  00180A  5002               	movf	___wmul@multiplier+1,w,c
  2374  00180C  0203               	mulwf	___wmul@multiplicand,c
  2375  00180E  50F3               	movf	prodl,w,c
  2376  001810  2606               	addwf	___wmul@product+1,f,c
  2377  001812  C005  F001         	movff	___wmul@product,?___wmul
  2378  001816  C006  F002         	movff	___wmul@product+1,?___wmul+1
  2379  00181A  0012               	return	
  2380  00181C                     __end_of___wmul:
  2381                           	opt stack 0
  2382                           tblptru	equ	0xFF8
  2383                           tblptrh	equ	0xFF7
  2384                           tblptrl	equ	0xFF6
  2385                           tablat	equ	0xFF5
  2386                           prodh	equ	0xFF4
  2387                           prodl	equ	0xFF3
  2388                           postinc0	equ	0xFEE
  2389                           wreg	equ	0xFE8
  2390                           indf1	equ	0xFE7
  2391                           fsr1h	equ	0xFE2
  2392                           fsr1l	equ	0xFE1
  2393                           indf2	equ	0xFDF
  2394                           postinc2	equ	0xFDE
  2395                           postdec2	equ	0xFDD
  2396                           fsr2h	equ	0xFDA
  2397                           fsr2l	equ	0xFD9
  2398                           status	equ	0xFD8
  2399                           
  2400 ;; *************** function ___lwdiv *****************
  2401 ;; Defined at:
  2402 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lwdiv.c"
  2403 ;; Parameters:    Size  Location     Type
  2404 ;;  dividend        2    0[COMRAM] unsigned int 
  2405 ;;  divisor         2    2[COMRAM] unsigned int 
  2406 ;; Auto vars:     Size  Location     Type
  2407 ;;  quotient        2    4[COMRAM] unsigned int 
  2408 ;;  counter         1    6[COMRAM] unsigned char 
  2409 ;; Return value:  Size  Location     Type
  2410 ;;                  2    0[COMRAM] unsigned int 
  2411 ;; Registers used:
  2412 ;;		wreg, status,2, status,0
  2413 ;; Tracked objects:
  2414 ;;		On entry : 0/0
  2415 ;;		On exit  : 0/0
  2416 ;;		Unchanged: 0/0
  2417 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2418 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2419 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2420 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2421 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2422 ;;Total ram usage:        7 bytes
  2423 ;; Hardware stack levels used:    1
  2424 ;; This function calls:
  2425 ;;		Nothing
  2426 ;; This function is called by:
  2427 ;;		_sprintf
  2428 ;; This function uses a non-reentrant model
  2429 ;;
  2430                           
  2431                           	psect	text14
  2432  0016CA                     __ptext14:
  2433                           	opt stack 0
  2434  0016CA                     ___lwdiv:
  2435                           	opt stack 29
  2436                           
  2437                           ;incstack = 0
  2438  0016CA  0E00               	movlw	0
  2439  0016CC  6E06               	movwf	___lwdiv@quotient+1,c
  2440  0016CE  0E00               	movlw	0
  2441  0016D0  6E05               	movwf	___lwdiv@quotient,c
  2442  0016D2  5003               	movf	___lwdiv@divisor,w,c
  2443  0016D4  1004               	iorwf	___lwdiv@divisor+1,w,c
  2444  0016D6  B4D8               	btfsc	status,2,c
  2445  0016D8  D01C               	goto	l669
  2446  0016DA  0E01               	movlw	1
  2447  0016DC  6E07               	movwf	___lwdiv@counter,c
  2448  0016DE  D004               	goto	l664
  2449  0016E0  90D8               	bcf	status,0,c
  2450  0016E2  3603               	rlcf	___lwdiv@divisor,f,c
  2451  0016E4  3604               	rlcf	___lwdiv@divisor+1,f,c
  2452  0016E6  2A07               	incf	___lwdiv@counter,f,c
  2453  0016E8                     l664:
  2454  0016E8  AE04               	btfss	___lwdiv@divisor+1,7,c
  2455  0016EA  D7FA               	goto	l665
  2456  0016EC                     u780:
  2457  0016EC  90D8               	bcf	status,0,c
  2458  0016EE  3605               	rlcf	___lwdiv@quotient,f,c
  2459  0016F0  3606               	rlcf	___lwdiv@quotient+1,f,c
  2460  0016F2  5003               	movf	___lwdiv@divisor,w,c
  2461  0016F4  5C01               	subwf	___lwdiv@dividend,w,c
  2462  0016F6  5004               	movf	___lwdiv@divisor+1,w,c
  2463  0016F8  5802               	subwfb	___lwdiv@dividend+1,w,c
  2464  0016FA  A0D8               	btfss	status,0,c
  2465  0016FC  D005               	goto	l668
  2466  0016FE  5003               	movf	___lwdiv@divisor,w,c
  2467  001700  5E01               	subwf	___lwdiv@dividend,f,c
  2468  001702  5004               	movf	___lwdiv@divisor+1,w,c
  2469  001704  5A02               	subwfb	___lwdiv@dividend+1,f,c
  2470  001706  8005               	bsf	___lwdiv@quotient,0,c
  2471  001708                     l668:
  2472  001708  90D8               	bcf	status,0,c
  2473  00170A  3204               	rrcf	___lwdiv@divisor+1,f,c
  2474  00170C  3203               	rrcf	___lwdiv@divisor,f,c
  2475  00170E  2E07               	decfsz	___lwdiv@counter,f,c
  2476  001710  D7ED               	goto	u780
  2477  001712                     l669:
  2478  001712  C005  F001         	movff	___lwdiv@quotient,?___lwdiv
  2479  001716  C006  F002         	movff	___lwdiv@quotient+1,?___lwdiv+1
  2480  00171A  0012               	return		;funcret
  2481  00171C                     __end_of___lwdiv:
  2482                           	opt stack 0
  2483                           tblptru	equ	0xFF8
  2484                           tblptrh	equ	0xFF7
  2485                           tblptrl	equ	0xFF6
  2486                           tablat	equ	0xFF5
  2487                           prodh	equ	0xFF4
  2488                           prodl	equ	0xFF3
  2489                           postinc0	equ	0xFEE
  2490                           wreg	equ	0xFE8
  2491                           indf1	equ	0xFE7
  2492                           fsr1h	equ	0xFE2
  2493                           fsr1l	equ	0xFE1
  2494                           indf2	equ	0xFDF
  2495                           postinc2	equ	0xFDE
  2496                           postdec2	equ	0xFDD
  2497                           fsr2h	equ	0xFDA
  2498                           fsr2l	equ	0xFD9
  2499                           status	equ	0xFD8
  2500                           
  2501 ;; *************** function _send_string_no_lib *****************
  2502 ;; Defined at:
  2503 ;;		line 47 in file "my_ser.c"
  2504 ;; Parameters:    Size  Location     Type
  2505 ;;  p               2    1[COMRAM] PTR unsigned char 
  2506 ;;		 -> main@Buffer(32), STR_2(23), sendBinaryStatus@message(40), 
  2507 ;; Auto vars:     Size  Location     Type
  2508 ;;		None
  2509 ;; Return value:  Size  Location     Type
  2510 ;;                  1    wreg      void 
  2511 ;; Registers used:
  2512 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2513 ;; Tracked objects:
  2514 ;;		On entry : 0/0
  2515 ;;		On exit  : 0/0
  2516 ;;		Unchanged: 0/0
  2517 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2518 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2519 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2520 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2521 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2522 ;;Total ram usage:        2 bytes
  2523 ;; Hardware stack levels used:    1
  2524 ;; Hardware stack levels required when called:    1
  2525 ;; This function calls:
  2526 ;;		_send_byte_no_lib
  2527 ;; This function is called by:
  2528 ;;		_sendBinaryStatus
  2529 ;;		_main
  2530 ;; This function uses a non-reentrant model
  2531 ;;
  2532                           
  2533                           	psect	text15
  2534  001674                     __ptext15:
  2535                           	opt stack 0
  2536  001674                     _send_string_no_lib:
  2537                           	opt stack 29
  2538                           
  2539                           ;my_ser.c: 48: while (*p) {
  2540                           
  2541                           ;incstack = 0
  2542  001674  D015               	goto	l192
  2543  001676                     
  2544                           ;my_ser.c: 49: send_byte_no_lib(*p);
  2545  001676  C002  FFF6         	movff	send_string_no_lib@p,tblptrl
  2546  00167A  C003  FFF7         	movff	send_string_no_lib@p+1,tblptrh
  2547  00167E  0E00               	movlw	low (__smallconst shr (0+16))
  2548  001680  6EF8               	movwf	tblptru,c
  2549  001682  0E0F               	movlw	(high __ramtop+-1)
  2550  001684  64F7               	cpfsgt	tblptrh,c
  2551  001686  D003               	bra	u1047
  2552  001688  0008               	tblrd		*
  2553  00168A  50F5               	movf	tablat,w,c
  2554  00168C  D005               	bra	u1040
  2555  00168E                     u1047:
  2556  00168E  CFF6 FFE1          	movff	tblptrl,fsr1l
  2557  001692  CFF7 FFE2          	movff	tblptrh,fsr1h
  2558  001696  50E7               	movf	indf1,w,c
  2559  001698                     u1040:
  2560  001698  EC91  F00C         	call	_send_byte_no_lib
  2561                           
  2562                           ;my_ser.c: 50: p++;
  2563  00169C  4A02               	infsnz	send_string_no_lib@p,f,c
  2564  00169E  2A03               	incf	send_string_no_lib@p+1,f,c
  2565  0016A0                     l192:
  2566  0016A0  C002  FFF6         	movff	send_string_no_lib@p,tblptrl
  2567  0016A4  C003  FFF7         	movff	send_string_no_lib@p+1,tblptrh
  2568  0016A8  0E00               	movlw	low (__smallconst shr (0+16))
  2569  0016AA  6EF8               	movwf	tblptru,c
  2570  0016AC  0E0F               	movlw	(high __ramtop+-1)
  2571  0016AE  64F7               	cpfsgt	tblptrh,c
  2572  0016B0  D003               	bra	u1057
  2573  0016B2  0008               	tblrd		*
  2574  0016B4  50F5               	movf	tablat,w,c
  2575  0016B6  D005               	bra	u1050
  2576  0016B8                     u1057:
  2577  0016B8  CFF6 FFE1          	movff	tblptrl,fsr1l
  2578  0016BC  CFF7 FFE2          	movff	tblptrh,fsr1h
  2579  0016C0  50E7               	movf	indf1,w,c
  2580  0016C2                     u1050:
  2581  0016C2  0900               	iorlw	0
  2582  0016C4  B4D8               	btfsc	status,2,c
  2583  0016C6  0012               	return	
  2584  0016C8  D7D6               	goto	l193
  2585  0016CA                     __end_of_send_string_no_lib:
  2586                           	opt stack 0
  2587                           tblptru	equ	0xFF8
  2588                           tblptrh	equ	0xFF7
  2589                           tblptrl	equ	0xFF6
  2590                           tablat	equ	0xFF5
  2591                           prodh	equ	0xFF4
  2592                           prodl	equ	0xFF3
  2593                           postinc0	equ	0xFEE
  2594                           wreg	equ	0xFE8
  2595                           indf1	equ	0xFE7
  2596                           fsr1h	equ	0xFE2
  2597                           fsr1l	equ	0xFE1
  2598                           indf2	equ	0xFDF
  2599                           postinc2	equ	0xFDE
  2600                           postdec2	equ	0xFDD
  2601                           fsr2h	equ	0xFDA
  2602                           fsr2l	equ	0xFD9
  2603                           status	equ	0xFD8
  2604                           
  2605 ;; *************** function _send_byte_no_lib *****************
  2606 ;; Defined at:
  2607 ;;		line 39 in file "my_ser.c"
  2608 ;; Parameters:    Size  Location     Type
  2609 ;;  c               1    wreg     unsigned char 
  2610 ;; Auto vars:     Size  Location     Type
  2611 ;;  c               1    0[COMRAM] unsigned char 
  2612 ;; Return value:  Size  Location     Type
  2613 ;;                  1    wreg      void 
  2614 ;; Registers used:
  2615 ;;		wreg
  2616 ;; Tracked objects:
  2617 ;;		On entry : 0/0
  2618 ;;		On exit  : 0/0
  2619 ;;		Unchanged: 0/0
  2620 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2621 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2622 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2623 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2624 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2625 ;;Total ram usage:        1 bytes
  2626 ;; Hardware stack levels used:    1
  2627 ;; This function calls:
  2628 ;;		Nothing
  2629 ;; This function is called by:
  2630 ;;		_send_string_no_lib
  2631 ;; This function uses a non-reentrant model
  2632 ;;
  2633                           
  2634                           	psect	text16
  2635  001922                     __ptext16:
  2636                           	opt stack 0
  2637  001922                     _send_byte_no_lib:
  2638                           	opt stack 29
  2639                           
  2640                           ;incstack = 0
  2641                           ;send_byte_no_lib@c stored from wreg
  2642  001922  6E01               	movwf	send_byte_no_lib@c,c
  2643                           
  2644                           ;my_ser.c: 40: while (!TXSTAbits.TRMT)
  2645  001924  D001               	goto	l186
  2646  001926                     l187:
  2647  001926  0004               	clrwdt		;# 
  2648  001928                     l186:
  2649  001928  A2AC               	btfss	4012,1,c	;volatile
  2650  00192A  D7FD               	goto	l187
  2651                           
  2652                           ;my_ser.c: 43: }
  2653                           ;my_ser.c: 44: TXREG = c;
  2654  00192C  C001  FFAD         	movff	send_byte_no_lib@c,4013	;volatile
  2655  001930  0012               	return		;funcret
  2656  001932                     __end_of_send_byte_no_lib:
  2657                           	opt stack 0
  2658                           tblptru	equ	0xFF8
  2659                           tblptrh	equ	0xFF7
  2660                           tblptrl	equ	0xFF6
  2661                           tablat	equ	0xFF5
  2662                           prodh	equ	0xFF4
  2663                           prodl	equ	0xFF3
  2664                           postinc0	equ	0xFEE
  2665                           wreg	equ	0xFE8
  2666                           indf1	equ	0xFE7
  2667                           fsr1h	equ	0xFE2
  2668                           fsr1l	equ	0xFE1
  2669                           indf2	equ	0xFDF
  2670                           postinc2	equ	0xFDE
  2671                           postdec2	equ	0xFDD
  2672                           fsr2h	equ	0xFDA
  2673                           fsr2l	equ	0xFD9
  2674                           status	equ	0xFD8
  2675                           
  2676 ;; *************** function _intToBinaryString *****************
  2677 ;; Defined at:
  2678 ;;		line 146 in file "serial_2024.c"
  2679 ;; Parameters:    Size  Location     Type
  2680 ;;  value           2    0[COMRAM] unsigned int 
  2681 ;;  buffer          2    2[COMRAM] PTR unsigned char 
  2682 ;;		 -> binaryString(9), 
  2683 ;;  bufferSize      2    4[COMRAM] int 
  2684 ;; Auto vars:     Size  Location     Type
  2685 ;;  i               2   12[COMRAM] int 
  2686 ;; Return value:  Size  Location     Type
  2687 ;;                  1    wreg      void 
  2688 ;; Registers used:
  2689 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2690 ;; Tracked objects:
  2691 ;;		On entry : 0/0
  2692 ;;		On exit  : 0/0
  2693 ;;		Unchanged: 0/0
  2694 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2695 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2696 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2697 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2698 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2699 ;;Total ram usage:       14 bytes
  2700 ;; Hardware stack levels used:    1
  2701 ;; This function calls:
  2702 ;;		Nothing
  2703 ;; This function is called by:
  2704 ;;		_sendBinaryStatus
  2705 ;; This function uses a non-reentrant model
  2706 ;;
  2707                           
  2708                           	psect	text17
  2709  00160A                     __ptext17:
  2710                           	opt stack 0
  2711  00160A                     _intToBinaryString:
  2712                           	opt stack 29
  2713                           
  2714                           ;serial_2024.c: 147: buffer[bufferSize - 1] = '\0';
  2715                           
  2716                           ;incstack = 0
  2717  00160A  0EFF               	movlw	255
  2718  00160C  6E07               	movwf	??_intToBinaryString& (0+255),c
  2719  00160E  0EFF               	movlw	255
  2720  001610  6E08               	movwf	(??_intToBinaryString+1)& (0+255),c
  2721  001612  C005  F009         	movff	intToBinaryString@bufferSize,??_intToBinaryString+2
  2722  001616  C006  F00A         	movff	intToBinaryString@bufferSize+1,??_intToBinaryString+3
  2723  00161A  5007               	movf	??_intToBinaryString,w,c
  2724  00161C  2609               	addwf	??_intToBinaryString+2,f,c
  2725  00161E  5008               	movf	??_intToBinaryString+1,w,c
  2726  001620  220A               	addwfc	??_intToBinaryString+3,f,c
  2727  001622  5009               	movf	??_intToBinaryString+2,w,c
  2728  001624  2403               	addwf	intToBinaryString@buffer,w,c
  2729  001626  6ED9               	movwf	fsr2l,c
  2730  001628  500A               	movf	??_intToBinaryString+3,w,c
  2731  00162A  2004               	addwfc	intToBinaryString@buffer+1,w,c
  2732  00162C  6EDA               	movwf	fsr2h,c
  2733  00162E  0E00               	movlw	0
  2734  001630  6EDF               	movwf	indf2,c
  2735                           
  2736                           ;serial_2024.c: 148: for (int i = bufferSize - 2; i >= 0; i--) {
  2737  001632  0EFE               	movlw	254
  2738  001634  2405               	addwf	intToBinaryString@bufferSize,w,c
  2739  001636  6E0D               	movwf	intToBinaryString@i,c
  2740  001638  0EFF               	movlw	255
  2741  00163A  2006               	addwfc	intToBinaryString@bufferSize+1,w,c
  2742  00163C  6E0E               	movwf	intToBinaryString@i+1,c
  2743  00163E                     l1346:
  2744  00163E  BE0E               	btfsc	intToBinaryString@i+1,7,c
  2745  001640  0012               	return	
  2746                           
  2747                           ;serial_2024.c: 149: buffer[i] = (value & 1) ? '1' : '0';
  2748  001642  B001               	btfsc	intToBinaryString@value,0,c
  2749  001644  D004               	goto	l91
  2750  001646  0E00               	movlw	0
  2751  001648  6E0C               	movwf	_intToBinaryString$432+1,c
  2752  00164A  0E30               	movlw	48
  2753  00164C  D003               	goto	L5
  2754  00164E                     l91:
  2755  00164E  0E00               	movlw	0
  2756  001650  6E0C               	movwf	_intToBinaryString$432+1,c
  2757  001652  0E31               	movlw	49
  2758  001654                     L5:
  2759  001654  6E0B               	movwf	_intToBinaryString$432,c
  2760  001656  500D               	movf	intToBinaryString@i,w,c
  2761  001658  2403               	addwf	intToBinaryString@buffer,w,c
  2762  00165A  6ED9               	movwf	fsr2l,c
  2763  00165C  500E               	movf	intToBinaryString@i+1,w,c
  2764  00165E  2004               	addwfc	intToBinaryString@buffer+1,w,c
  2765  001660  6EDA               	movwf	fsr2h,c
  2766  001662  C00B  FFDF         	movff	_intToBinaryString$432,indf2
  2767                           
  2768                           ;serial_2024.c: 150: value >>= 1;
  2769  001666  90D8               	bcf	status,0,c
  2770  001668  3202               	rrcf	intToBinaryString@value+1,f,c
  2771  00166A  3201               	rrcf	intToBinaryString@value,f,c
  2772  00166C  060D               	decf	intToBinaryString@i,f,c
  2773  00166E  A0D8               	btfss	status,0,c
  2774  001670  060E               	decf	intToBinaryString@i+1,f,c
  2775  001672  D7E5               	goto	l1346
  2776  001674                     __end_of_intToBinaryString:
  2777                           	opt stack 0
  2778                           tblptru	equ	0xFF8
  2779                           tblptrh	equ	0xFF7
  2780                           tblptrl	equ	0xFF6
  2781                           tablat	equ	0xFF5
  2782                           prodh	equ	0xFF4
  2783                           prodl	equ	0xFF3
  2784                           postinc0	equ	0xFEE
  2785                           wreg	equ	0xFE8
  2786                           indf1	equ	0xFE7
  2787                           fsr1h	equ	0xFE2
  2788                           fsr1l	equ	0xFE1
  2789                           indf2	equ	0xFDF
  2790                           postinc2	equ	0xFDE
  2791                           postdec2	equ	0xFDD
  2792                           fsr2h	equ	0xFDA
  2793                           fsr2l	equ	0xFD9
  2794                           status	equ	0xFD8
  2795                           
  2796 ;; *************** function _read_byte_no_lib *****************
  2797 ;; Defined at:
  2798 ;;		line 33 in file "my_ser.c"
  2799 ;; Parameters:    Size  Location     Type
  2800 ;;		None
  2801 ;; Auto vars:     Size  Location     Type
  2802 ;;  c               1    0[COMRAM] unsigned char 
  2803 ;; Return value:  Size  Location     Type
  2804 ;;                  1    wreg      unsigned char 
  2805 ;; Registers used:
  2806 ;;		wreg, status,2
  2807 ;; Tracked objects:
  2808 ;;		On entry : 0/0
  2809 ;;		On exit  : 0/0
  2810 ;;		Unchanged: 0/0
  2811 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2812 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2813 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2814 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2815 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2816 ;;Total ram usage:        1 bytes
  2817 ;; Hardware stack levels used:    1
  2818 ;; This function calls:
  2819 ;;		Nothing
  2820 ;; This function is called by:
  2821 ;;		_main
  2822 ;; This function uses a non-reentrant model
  2823 ;;
  2824                           
  2825                           	psect	text18
  2826  001932                     __ptext18:
  2827                           	opt stack 0
  2828  001932                     _read_byte_no_lib:
  2829                           	opt stack 30
  2830                           
  2831                           ;my_ser.c: 34: unsigned char c;
  2832                           ;my_ser.c: 35: c = RCREG;
  2833                           
  2834                           ;incstack = 0
  2835  001932  CFAE F001          	movff	4014,read_byte_no_lib@c	;volatile
  2836                           
  2837                           ;my_ser.c: 36: return c;
  2838  001936  5001               	movf	read_byte_no_lib@c,w,c
  2839  001938  0012               	return	
  2840  00193A                     __end_of_read_byte_no_lib:
  2841                           	opt stack 0
  2842                           tblptru	equ	0xFF8
  2843                           tblptrh	equ	0xFF7
  2844                           tblptrl	equ	0xFF6
  2845                           tablat	equ	0xFF5
  2846                           prodh	equ	0xFF4
  2847                           prodl	equ	0xFF3
  2848                           postinc0	equ	0xFEE
  2849                           wreg	equ	0xFE8
  2850                           indf1	equ	0xFE7
  2851                           fsr1h	equ	0xFE2
  2852                           fsr1l	equ	0xFE1
  2853                           indf2	equ	0xFDF
  2854                           postinc2	equ	0xFDE
  2855                           postdec2	equ	0xFDD
  2856                           fsr2h	equ	0xFDA
  2857                           fsr2l	equ	0xFD9
  2858                           status	equ	0xFD8
  2859                           
  2860 ;; *************** function _is_byte_available *****************
  2861 ;; Defined at:
  2862 ;;		line 21 in file "my_ser.c"
  2863 ;; Parameters:    Size  Location     Type
  2864 ;;		None
  2865 ;; Auto vars:     Size  Location     Type
  2866 ;;		None
  2867 ;; Return value:  Size  Location     Type
  2868 ;;                  1    wreg      unsigned char 
  2869 ;; Registers used:
  2870 ;;		wreg
  2871 ;; Tracked objects:
  2872 ;;		On entry : 0/0
  2873 ;;		On exit  : 0/0
  2874 ;;		Unchanged: 0/0
  2875 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2876 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2877 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2878 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2879 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2880 ;;Total ram usage:        0 bytes
  2881 ;; Hardware stack levels used:    1
  2882 ;; This function calls:
  2883 ;;		Nothing
  2884 ;; This function is called by:
  2885 ;;		_main
  2886 ;; This function uses a non-reentrant model
  2887 ;;
  2888                           
  2889                           	psect	text19
  2890  0018DE                     __ptext19:
  2891                           	opt stack 0
  2892  0018DE                     _is_byte_available:
  2893                           	opt stack 30
  2894                           
  2895                           ;my_ser.c: 23: if (RCSTAbits.FERR || RCSTAbits.OERR)
  2896                           
  2897                           ;incstack = 0
  2898  0018DE  B4AB               	btfsc	4011,2,c	;volatile
  2899  0018E0  D002               	goto	u1190
  2900  0018E2  A2AB               	btfss	4011,1,c	;volatile
  2901  0018E4  D002               	goto	l175
  2902  0018E6                     u1190:
  2903                           
  2904                           ;my_ser.c: 24: {
  2905                           ;my_ser.c: 25: RCSTAbits.CREN = 0;
  2906  0018E6  98AB               	bcf	4011,4,c	;volatile
  2907                           
  2908                           ;my_ser.c: 26: RCSTAbits.CREN = 1;
  2909  0018E8  88AB               	bsf	4011,4,c	;volatile
  2910  0018EA                     l175:
  2911                           
  2912                           ;my_ser.c: 27: }
  2913                           ;my_ser.c: 29: if (PIR1bits.RCIF) return 1;
  2914  0018EA  AA9E               	btfss	3998,5,c	;volatile
  2915  0018EC  D002               	goto	l178
  2916  0018EE  0E01               	movlw	1
  2917  0018F0  0012               	return	
  2918  0018F2                     l178:
  2919                           
  2920                           ;my_ser.c: 30: else return 0;
  2921  0018F2  0E00               	movlw	0
  2922  0018F4  0012               	return	
  2923  0018F6                     __end_of_is_byte_available:
  2924                           	opt stack 0
  2925                           tblptru	equ	0xFF8
  2926                           tblptrh	equ	0xFF7
  2927                           tblptrl	equ	0xFF6
  2928                           tablat	equ	0xFF5
  2929                           prodh	equ	0xFF4
  2930                           prodl	equ	0xFF3
  2931                           postinc0	equ	0xFEE
  2932                           wreg	equ	0xFE8
  2933                           indf1	equ	0xFE7
  2934                           fsr1h	equ	0xFE2
  2935                           fsr1l	equ	0xFE1
  2936                           indf2	equ	0xFDF
  2937                           postinc2	equ	0xFDE
  2938                           postdec2	equ	0xFDD
  2939                           fsr2h	equ	0xFDA
  2940                           fsr2l	equ	0xFD9
  2941                           status	equ	0xFD8
  2942                           
  2943 ;; *************** function _initialize *****************
  2944 ;; Defined at:
  2945 ;;		line 74 in file "serial_2024.c"
  2946 ;; Parameters:    Size  Location     Type
  2947 ;;		None
  2948 ;; Auto vars:     Size  Location     Type
  2949 ;;		None
  2950 ;; Return value:  Size  Location     Type
  2951 ;;                  1    wreg      void 
  2952 ;; Registers used:
  2953 ;;		wreg, status,2
  2954 ;; Tracked objects:
  2955 ;;		On entry : 0/0
  2956 ;;		On exit  : 0/0
  2957 ;;		Unchanged: 0/0
  2958 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2959 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2960 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2961 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2962 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2963 ;;Total ram usage:        0 bytes
  2964 ;; Hardware stack levels used:    1
  2965 ;; This function calls:
  2966 ;;		Nothing
  2967 ;; This function is called by:
  2968 ;;		_main
  2969 ;; This function uses a non-reentrant model
  2970 ;;
  2971                           
  2972                           	psect	text20
  2973  0017A2                     __ptext20:
  2974                           	opt stack 0
  2975  0017A2                     _initialize:
  2976                           	opt stack 30
  2977                           
  2978                           ;serial_2024.c: 76: ADCON0 = 0;
  2979                           
  2980                           ;incstack = 0
  2981  0017A2  0E00               	movlw	0
  2982  0017A4  6EC2               	movwf	4034,c	;volatile
  2983                           
  2984                           ;serial_2024.c: 77: ADCON1 = 0b00001100;
  2985  0017A6  0E0C               	movlw	12
  2986  0017A8  6EC1               	movwf	4033,c	;volatile
  2987                           
  2988                           ;serial_2024.c: 78: TRISB = 0xFF;
  2989  0017AA  6893               	setf	3987,c	;volatile
  2990                           
  2991                           ;serial_2024.c: 79: TRISC = 0x80;
  2992  0017AC  0E80               	movlw	128
  2993  0017AE  6E94               	movwf	3988,c	;volatile
  2994                           
  2995                           ;serial_2024.c: 80: PORTC =0;
  2996  0017B0  0E00               	movlw	0
  2997  0017B2  6E82               	movwf	3970,c	;volatile
  2998                           
  2999                           ;serial_2024.c: 81: TRISA = 0xFF;
  3000  0017B4  6892               	setf	3986,c	;volatile
  3001                           
  3002                           ;serial_2024.c: 82: TRISD = 0x00;
  3003  0017B6  0E00               	movlw	0
  3004  0017B8  6E95               	movwf	3989,c	;volatile
  3005                           
  3006                           ;serial_2024.c: 83: TRISE = 0x00;
  3007  0017BA  0E00               	movlw	0
  3008  0017BC  6E96               	movwf	3990,c	;volatile
  3009                           
  3010                           ;serial_2024.c: 84: TRISB = 0b00111001;
  3011  0017BE  0E39               	movlw	57
  3012  0017C0  6E93               	movwf	3987,c	;volatile
  3013                           
  3014                           ;serial_2024.c: 85: PORTD = 0x00;
  3015  0017C2  0E00               	movlw	0
  3016  0017C4  6E83               	movwf	3971,c	;volatile
  3017                           
  3018                           ;serial_2024.c: 86: TRISBbits.TRISB1 = 1;
  3019  0017C6  8293               	bsf	3987,1,c	;volatile
  3020                           
  3021                           ;serial_2024.c: 87: TRISBbits.TRISB2 = 1;
  3022  0017C8  8493               	bsf	3987,2,c	;volatile
  3023                           
  3024                           ;serial_2024.c: 88: INTCONbits.GIE = 1;
  3025  0017CA  8EF2               	bsf	intcon,7,c	;volatile
  3026                           
  3027                           ;serial_2024.c: 89: INTCONbits.PEIE = 1;
  3028  0017CC  8CF2               	bsf	intcon,6,c	;volatile
  3029  0017CE  0012               	return		;funcret
  3030  0017D0                     __end_of_initialize:
  3031                           	opt stack 0
  3032                           tblptru	equ	0xFF8
  3033                           tblptrh	equ	0xFF7
  3034                           tblptrl	equ	0xFF6
  3035                           tablat	equ	0xFF5
  3036                           prodh	equ	0xFF4
  3037                           prodl	equ	0xFF3
  3038                           intcon	equ	0xFF2
  3039                           postinc0	equ	0xFEE
  3040                           wreg	equ	0xFE8
  3041                           indf1	equ	0xFE7
  3042                           fsr1h	equ	0xFE2
  3043                           fsr1l	equ	0xFE1
  3044                           indf2	equ	0xFDF
  3045                           postinc2	equ	0xFDE
  3046                           postdec2	equ	0xFDD
  3047                           fsr2h	equ	0xFDA
  3048                           fsr2l	equ	0xFD9
  3049                           status	equ	0xFD8
  3050                           
  3051 ;; *************** function _delay_ms *****************
  3052 ;; Defined at:
  3053 ;;		line 139 in file "serial_2024.c"
  3054 ;; Parameters:    Size  Location     Type
  3055 ;;  n               2    0[COMRAM] unsigned int 
  3056 ;; Auto vars:     Size  Location     Type
  3057 ;;  i               2    2[COMRAM] int 
  3058 ;; Return value:  Size  Location     Type
  3059 ;;                  1    wreg      void 
  3060 ;; Registers used:
  3061 ;;		wreg, status,2, status,0
  3062 ;; Tracked objects:
  3063 ;;		On entry : 0/0
  3064 ;;		On exit  : 0/0
  3065 ;;		Unchanged: 0/0
  3066 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3067 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3068 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3069 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3070 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3071 ;;Total ram usage:        4 bytes
  3072 ;; Hardware stack levels used:    1
  3073 ;; This function calls:
  3074 ;;		Nothing
  3075 ;; This function is called by:
  3076 ;;		_main
  3077 ;; This function uses a non-reentrant model
  3078 ;;
  3079                           
  3080                           	psect	text21
  3081  00181C                     __ptext21:
  3082                           	opt stack 0
  3083  00181C                     _delay_ms:
  3084                           	opt stack 30
  3085                           
  3086                           ;serial_2024.c: 141: int i;
  3087                           ;serial_2024.c: 142: for (i=0; i < n; i++){
  3088                           
  3089                           ;incstack = 0
  3090  00181C  0E00               	movlw	0
  3091  00181E  6E04               	movwf	delay_ms@i+1,c
  3092  001820  0E00               	movlw	0
  3093  001822  6E03               	movwf	delay_ms@i,c
  3094  001824  D007               	goto	l82
  3095  001826                     
  3096                           ;serial_2024.c: 143: _delaywdt((unsigned long)((1)*(4000000UL/4000.0))) ;
  3097  001826  0EC8               	movlw	200
  3098  001828                     u1477:
  3099  001828  0004               	clrwdt	
  3100  00182A  0004               	clrwdt	
  3101  00182C  2EE8               	decfsz	wreg,f,c
  3102  00182E  D7FC               	bra	u1477
  3103  001830  4A03               	infsnz	delay_ms@i,f,c
  3104  001832  2A04               	incf	delay_ms@i+1,f,c
  3105  001834                     l82:
  3106  001834  5001               	movf	delay_ms@n,w,c
  3107  001836  5C03               	subwf	delay_ms@i,w,c
  3108  001838  5002               	movf	delay_ms@n+1,w,c
  3109  00183A  5804               	subwfb	delay_ms@i+1,w,c
  3110  00183C  B0D8               	btfsc	status,0,c
  3111  00183E  0012               	return	
  3112  001840  D7F2               	goto	l83
  3113  001842                     __end_of_delay_ms:
  3114                           	opt stack 0
  3115                           tblptru	equ	0xFF8
  3116                           tblptrh	equ	0xFF7
  3117                           tblptrl	equ	0xFF6
  3118                           tablat	equ	0xFF5
  3119                           prodh	equ	0xFF4
  3120                           prodl	equ	0xFF3
  3121                           intcon	equ	0xFF2
  3122                           postinc0	equ	0xFEE
  3123                           wreg	equ	0xFE8
  3124                           indf1	equ	0xFE7
  3125                           fsr1h	equ	0xFE2
  3126                           fsr1l	equ	0xFE1
  3127                           indf2	equ	0xFDF
  3128                           postinc2	equ	0xFDE
  3129                           postdec2	equ	0xFDD
  3130                           fsr2h	equ	0xFDA
  3131                           fsr2l	equ	0xFD9
  3132                           status	equ	0xFD8
  3133                           tblptru	equ	0xFF8
  3134                           tblptrh	equ	0xFF7
  3135                           tblptrl	equ	0xFF6
  3136                           tablat	equ	0xFF5
  3137                           prodh	equ	0xFF4
  3138                           prodl	equ	0xFF3
  3139                           intcon	equ	0xFF2
  3140                           postinc0	equ	0xFEE
  3141                           wreg	equ	0xFE8
  3142                           indf1	equ	0xFE7
  3143                           fsr1h	equ	0xFE2
  3144                           fsr1l	equ	0xFE1
  3145                           indf2	equ	0xFDF
  3146                           postinc2	equ	0xFDE
  3147                           postdec2	equ	0xFDD
  3148                           fsr2h	equ	0xFDA
  3149                           fsr2l	equ	0xFD9
  3150                           status	equ	0xFD8
  3151                           
  3152                           	psect	rparam
  3153  0000                     tblptru	equ	0xFF8
  3154                           tblptrh	equ	0xFF7
  3155                           tblptrl	equ	0xFF6
  3156                           tablat	equ	0xFF5
  3157                           prodh	equ	0xFF4
  3158                           prodl	equ	0xFF3
  3159                           intcon	equ	0xFF2
  3160                           postinc0	equ	0xFEE
  3161                           wreg	equ	0xFE8
  3162                           indf1	equ	0xFE7
  3163                           fsr1h	equ	0xFE2
  3164                           fsr1l	equ	0xFE1
  3165                           indf2	equ	0xFDF
  3166                           postinc2	equ	0xFDE
  3167                           postdec2	equ	0xFDD
  3168                           fsr2h	equ	0xFDA
  3169                           fsr2l	equ	0xFD9
  3170                           status	equ	0xFD8


Data Sizes:
    Strings     124
    Constant    8
    Data        0
    BSS         17
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127    118     126
    BANK0           128      0       9
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    sprintf@cp	PTR const unsigned char  size(2) Largest target is 9
		 -> STR_13(CODE[7]), STR_11(CODE[4]), STR_10(CODE[3]), STR_9(CODE[4]), 
		 -> STR_8(CODE[3]), STR_7(CODE[4]), STR_6(CODE[3]), STR_5(CODE[4]), 
		 -> STR_4(CODE[3]), binaryString(BANK0[9]), 

    sprintf@f	PTR const unsigned char  size(2) Largest target is 42
		 -> STR_12(CODE[14]), STR_3(CODE[42]), STR_1(CODE[14]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 40
		 -> main@Buffer(COMRAM[32]), sendBinaryStatus@message(COMRAM[40]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), 

    send_string_no_lib@p	PTR unsigned char  size(2) Largest target is 40
		 -> main@Buffer(COMRAM[32]), STR_2(CODE[23]), sendBinaryStatus@message(COMRAM[40]), 

    main$480	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_5(CODE[4]), STR_4(CODE[3]), 

    main$479	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_7(CODE[4]), STR_6(CODE[3]), 

    main$478	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_9(CODE[4]), STR_8(CODE[3]), 

    main$477	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_11(CODE[4]), STR_10(CODE[3]), 

    intToBinaryString@buffer	PTR unsigned char  size(2) Largest target is 9
		 -> binaryString(BANK0[9]), 


Critical Paths under _main in COMRAM

    _main->_sendBinaryStatus
    _sendBinaryStatus->_sprintf
    _sprintf->___lwdiv
    _send_string_no_lib->_send_byte_no_lib

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                42    42      0    6560
                                             77 COMRAM    41    41      0
                           _delay_ms
                         _initialize
                  _is_byte_available
                   _read_byte_no_lib
                   _sendBinaryStatus
                 _send_string_no_lib
                        _setupSerial
                            _sprintf
                     _toggleLEDs0167
                     _toggleLEDs2345
                       _toggleRelay1
                       _toggleRelay2
                  _turnEverythingOff
          _turnOFFHeaterTurnOnCooler
          _turnONHeaterTurnOffCooler
      _updateRelayStatesFromHardware
 ---------------------------------------------------------------------------------
 (1) _updateRelayStatesFromHardware                        1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _turnONHeaterTurnOffCooler                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _turnOFFHeaterTurnOnCooler                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _turnEverythingOff                                    1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _toggleRelay2                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _toggleRelay1                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _toggleLEDs2345                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _toggleLEDs0167                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _setupSerial                                          1     1      0       2
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _sendBinaryStatus                                    40    40      0    3035
                                             37 COMRAM    40    40      0
                  _intToBinaryString
                 _send_string_no_lib
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             34    22     12    2173
                                              7 COMRAM    30    18     12
                            ___lwdiv
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              3     3      0      68
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     311
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4     314
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (1) _send_string_no_lib                                   2     0      2     371
                                              1 COMRAM     2     0      2
                   _send_byte_no_lib
 ---------------------------------------------------------------------------------
 (2) _send_byte_no_lib                                     1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _intToBinaryString                                   14     8      6     431
                                              0 COMRAM    14     8      6
 ---------------------------------------------------------------------------------
 (1) _read_byte_no_lib                                     1     1      0      23
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _is_byte_available                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initialize                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _delay_ms                                             4     2      2     502
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _delay_ms
   _initialize
   _is_byte_available
   _read_byte_no_lib
   _sendBinaryStatus
     _intToBinaryString
     _send_string_no_lib
       _send_byte_no_lib
     _sprintf
       ___lwdiv
       ___wmul
       _isdigit
   _send_string_no_lib
     _send_byte_no_lib
   _setupSerial
   _sprintf
     ___lwdiv
     ___wmul
     _isdigit
   _toggleLEDs0167
   _toggleLEDs2345
   _toggleRelay1
   _toggleRelay2
   _turnEverythingOff
   _turnOFFHeaterTurnOnCooler
   _turnONHeaterTurnOffCooler
   _updateRelayStatesFromHardware

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F7F      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK15           80      0       0      35        0.0%
BANK15              80      0       0      36        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       9       5        7.0%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     76      7E       1       99.2%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      87      34        0.0%
DATA                 0      0      87       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Sat Jun 01 00:46:44 2024

                   ??_turnEverythingOff 0001                                      l82 1834  
                                    l83 1826                                      l91 164E  
                   ___wmul@multiplicand 0003                             __CFG_BORV$3 000000  
                          __CFG_CP0$OFF 000000                            __CFG_CP1$OFF 000000  
                          __CFG_CP2$OFF 000000                            __CFG_CP3$OFF 000000  
                           __CFG_OSC$XT 000000                             __CFG_LVP$ON 000000  
                           __CFG_WDT$ON 000000                                     l110 151C  
                                   l102 13E0                                     l103 13F6  
                                   l120 14BA                                     l112 148A  
                                   l104 140A                                     l105 141E  
                                   l210 10BE                                     l130 155E  
                                   l106 1432                                     l211 10B8  
                                   l107 1446                                     l140 15C4  
                                   l132 156C                                     l124 14D2  
                                   l116 14A2                                     l108 145E  
                                   l142 15E0                                     l134 157A  
                                   l223 1272                                     l231 11EC  
                                   l207 1090                                     l232 11DC  
                                   l224 1152                                     l216 10F0  
                                   l208 10AA                                     l144 15FC  
                                   l136 1588                                     l128 1550  
                                   l241 12E4                                     l225 117A  
                                   l242 12EC                                     l218 1244  
                                   l234 1232                                     l226 1188  
                                   l138 15A8                                     l251 139C  
                                   l243 1310                                     l235 11FE  
                                   l227 1184                                     l252 133C  
                                   l229 11D2                                     l175 18EA  
                                   l192 16A0                                     l193 1676  
                                   l178 18F2                                     l186 1928  
                                   l187 1926                                     l664 16E8  
                                   l665 16E0                                     l585 18D6  
                                   l668 1708                                     l669 1712  
                          __CFG_CPB$OFF 000000                            __CFG_CPD$OFF 000000  
                                   u910 1228                                     u780 16EC  
                                   u917 121E                                     u950 12C0  
                                   u870 11B6                                     u877 11AC  
                                   wreg 000FE8               _turnOFFHeaterTurnOnCooler 190C  
             __end_of_turnEverythingOff 17A2                                    l1410 11DC  
                                  l1416 11FE                                    l1346 163E  
                                  l1434 128E                                    STR_1 1069  
                                  STR_2 1033                                    STR_3 1009  
                                  STR_4 1082                                    STR_5 107E  
                                  STR_6 1082                                    STR_7 107E  
                                  STR_8 1082                                    STR_9 107E  
                                  u1000 1318                                    u1010 1336  
                                  u1020 13A4                                    u1100 18B0  
                                  u1030 13BE                                    u1040 1698  
                                  u1120 1890                                    u1050 16C2  
                                  u1130 1892                                    u1115 18BC  
                                  u1116 18BE                                    u1070 1782  
                                  u1150 17DA                                    u1047 168E  
                                  u1080 1794                                    u1160 17EC  
                                  u1057 16B8                                    u1145 189E  
                                  u1090 18AE                                    u1146 18A0  
                                  u1190 18E6                                    u1078 1784  
                                  u1158 17DC                                    u1415 15C0  
                                  u1088 1796                                    u1168 17EE  
                                  u1416 15C2                                    _LATD 000F8C  
                                  u1435 15DC                                    u1436 15DE  
                                  u1455 15F8                                    u1456 15FA  
                                  u1395 15A0                                    u1396 15A2  
                                  u1477 1828                                    _main 13CC  
                      _send_byte_no_lib 1922                                    fsr1h 000FE2  
                                  fsr2h 000FDA                                    indf1 000FE7  
                                  indf2 000FDF                                    fsr1l 000FE1  
                                  fsr2l 000FD9                                    prodh 000FF4  
                                  prodl 000FF3                                    start 0000  
                      _sendBinaryStatus 171C                           __CFG_IESO$OFF 000000  
                         __CFG_MCLRE$ON 000000                            ___param_bank 000000  
 __end_of_updateRelayStatesFromHardware 17F6  __size_of_updateRelayStatesFromHardware 0026  
         _updateRelayStatesFromHardware 17D0              ?_turnONHeaterTurnOffCooler 0001  
                                 ?_main 0001                                   STR_10 1082  
                                 STR_11 107E                                   STR_12 105B  
                                 STR_13 1077                                   STR_14 104A  
                       __end_of___lwdiv 171C                                   _RCREG 000FAE  
                                 _RCSTA 000FAB                                   _SPBRG 000FAF  
                                 _PORTC 000F82                                   _PORTD 000F83  
                                 _TRISA 000F92                                   _TRISB 000F93  
                                 _TRISC 000F94                                   _TRISD 000F95  
                                 _TRISE 000F96                                   _TXREG 000FAD  
                                 _TXSTA 000FAC                           __CFG_PWRT$OFF 000000  
                         __CFG_WRT0$OFF 000000                           __CFG_WRT1$OFF 000000  
                         __CFG_WRT2$OFF 000000                           __CFG_WRT3$OFF 000000  
                        __CFG_EBTR0$OFF 000000                          __CFG_FCMEN$OFF 000000  
                        __CFG_EBTR1$OFF 000000                          __CFG_EBTR2$OFF 000000  
                        __CFG_EBTR3$OFF 000000                           __CFG_WRTB$OFF 000000  
                         __CFG_WRTC$OFF 000000                           __CFG_WRTD$OFF 000000  
                        __CFG_EBTRB$OFF 000000                         __end_of_isdigit 18DE  
                                 tablat 000FF5                                   status 000FD8  
                       __end_of_sprintf 13CC                          __CFG_PBADEN$ON 000000  
                       __initialization 1866                            __end_of_main 160A  
                                ??_main 004E                           __activetblptr 000003  
            __size_of_turnEverythingOff 0042                                  _ADCON0 000FC2  
                                _ADCON1 000FC1                                  _SPBRGH 000FB0  
                      __end_of_delay_ms 1842                          __CFG_XINST$OFF 000000  
                                ___wmul 17F6                          __CFG_STVREN$ON 000000  
                             ??___lwdiv 0005                                  clear_0 186C  
                                clear_1 1878                                  _relay1 0079  
                                _relay2 0077          ?_updateRelayStatesFromHardware 0001  
                      ??_toggleLEDs0167 0001                        ??_toggleLEDs2345 0001  
                                main@ch 0076                               ??_isdigit 0001  
                          __mediumconst 0000                     send_string_no_lib@p 0002  
                                tblptrh 000FF7                                  tblptrl 000FF6  
                                tblptru 000FF8                      _send_string_no_lib 1674  
                          ?_setupSerial 0001                               ??_sprintf 0014  
                            __accesstop 0080                 __end_of__initialization 187E  
                   ?_send_string_no_lib 0002                       ?_read_byte_no_lib 0001  
    __size_of_turnOFFHeaterTurnOnCooler 0016                           ___rparam_used 000001  
                    ??_read_byte_no_lib 0001                          __pcstackCOMRAM 0001  
                intToBinaryString@value 0001                    ??_send_string_no_lib 0004  
              __end_of_send_byte_no_lib 1932                __end_of_sendBinaryStatus 1760  
                          sprintf@width 0023                              __pbssBANK0 0080  
                     _intToBinaryString 160A                      ?_intToBinaryString 0001  
                     read_byte_no_lib@c 0001       __end_of_turnOFFHeaterTurnOnCooler 1922  
                   ??_intToBinaryString 0007                                 ?___wmul 0001  
                          _binaryString 0080             ??_turnONHeaterTurnOffCooler 0001  
                             ?_delay_ms 0001               __end_of_intToBinaryString 1674  
                     _is_byte_available 18DE                                 __Hparam 0000  
                               __Lparam 0000                      ?_is_byte_available 0001  
           intToBinaryString@bufferSize 0005                         __size_of___wmul 0026  
                               ___lwdiv 16CA                            __psmallconst 1000  
                               __pcinit 1866                                 __ramtop 1000  
                            _initialize 17A2                     ??_is_byte_available 0001  
                               __ptext0 13CC                                 __ptext1 17D0  
                               __ptext2 18F6                                 __ptext3 190C  
                               __ptext4 1760                                 __ptext5 1884  
                               __ptext6 18A2                                 __ptext7 193A  
                               __ptext8 1940                                 __ptext9 1842  
                     __end_of_hexpowers 1009                                 _isdigit 18C0  
                            ??_delay_ms 0003               _turnONHeaterTurnOffCooler 18F6  
                               _sprintf 1086                    end_of_initialization 187E  
                  __size_of_setupSerial 0024               __end_of_is_byte_available 18F6  
                             _RCSTAbits 000FAB                                 postdec2 000FDD  
                               postinc0 000FEE                                 postinc2 000FDE  
                      setupSerial@dummy 0001                               _PORTBbits 000F81  
                             _PORTCbits 000F82                               _PORTEbits 000F84  
                             _TRISBbits 000F93                              main@Buffer 004E  
            __size_of_intToBinaryString 006A                           ?_toggleRelay1 0001  
                         ?_toggleRelay2 0001         ??_updateRelayStatesFromHardware 0001  
                             _TXSTAbits 000FAC                       send_byte_no_lib@c 0001  
                        __end_of___wmul 181C                             _BAUDCONbits 000FB8  
                           ?_initialize 0001               __size_of_read_byte_no_lib 0008  
               intToBinaryString@buffer 0003                       ?_send_byte_no_lib 0001  
                   start_initialization 1866                       ?_sendBinaryStatus 0001  
                    ??_send_byte_no_lib 0001                      ??_sendBinaryStatus 0026  
                        ??_toggleRelay1 0001                          ??_toggleRelay2 0001  
            __size_of_is_byte_available 0018                                ??___wmul 0005  
                      __CFG_LPT1OSC$OFF 000000             __size_of_send_string_no_lib 0056  
                           __pbssCOMRAM 0077                       __size_of_delay_ms 0026  
               __size_of_toggleLEDs0167 0006                 __size_of_toggleLEDs2345 0006  
                           sprintf@flag 0019                             sprintf@prec 001C  
                   __size_of_initialize 002E      __size_of_turnONHeaterTurnOffCooler 0016  
                      ___lwdiv@dividend 0001                       __CFG_CCP2MX$PORTC 000000  
            ?_turnOFFHeaterTurnOnCooler 0001                                ?___lwdiv 0001  
                           __smallconst 1000                                ?_isdigit 0001  
                             _hexpowers 1001                        ___lwdiv@quotient 0005  
                           _heaterState 007D                                ?_sprintf 0008  
                        ___wmul@product 0005                               delay_ms@i 0003  
                             delay_ms@n 0001                                _PIR1bits 000F9E  
     __end_of_turnONHeaterTurnOffCooler 190C                        __CFG_WDTPS$32768 000000  
                  __end_of_toggleRelay1 18C0                    __end_of_toggleRelay2 18A2  
                           _coolerState 007B                        _read_byte_no_lib 1932  
                     ___wmul@multiplier 0001                           ??_setupSerial 0001  
                              __Hrparam 0000                                __Lrparam 0000  
                    __CFG_BOREN$SBORDIS 000000                        __size_of___lwdiv 0052  
                          ??_initialize 0001                             _isdigit$955 0002  
                            sprintf@idx 0018                              sprintf@len 0021  
                            sprintf@val 001A                        __size_of_isdigit 001E  
                              _main$480 0074                                _main$477 006E  
                              _main$478 0070                                _main$479 0072  
                              _delay_ms 181C                         ___lwdiv@divisor 0003  
                       ___lwdiv@counter 0007                                __ptext10 171C  
                              __ptext11 1086                                __ptext20 17A2  
                              __ptext12 18C0                                __ptext21 181C  
                              __ptext13 17F6                                __ptext14 16CA  
                              __ptext15 1674                                __ptext16 1922  
                              __ptext17 160A                                __ptext18 1932  
                              __ptext19 18DE                          _toggleLEDs0167 1940  
                        _toggleLEDs2345 193A                        __size_of_sprintf 0346  
                         __size_of_main 023E               __size_of_send_byte_no_lib 0010  
                   __end_of_setupSerial 1866                      __end_of_initialize 17D0  
             __size_of_sendBinaryStatus 0044                      intToBinaryString@i 000D  
                            _INTCONbits 000FF2                  __end_of_toggleLEDs0167 1946  
                __end_of_toggleLEDs2345 1940                                isdigit@c 0003  
                             sprintf@ap 001D                               sprintf@cp 001F  
                             sprintf@sp 0008                   __size_of_toggleRelay1 001E  
                 __size_of_toggleRelay2 001E             ??_turnOFFHeaterTurnOnCooler 0001  
            __end_of_send_string_no_lib 16CA                                sprintf@c 0025  
                              sprintf@f 000A                         ?_toggleLEDs0167 0001  
                       ?_toggleLEDs2345 0001                             _setupSerial 1842  
                     _turnEverythingOff 1760                            _toggleRelay1 18A2  
                          _toggleRelay2 1884                __end_of_read_byte_no_lib 193A  
                    ?_turnEverythingOff 0001                   _intToBinaryString$432 000B  
               sendBinaryStatus@message 0026  
